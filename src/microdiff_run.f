CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C MICRODIFF_RUN
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE MICRODIFF_RUN(NLIGHT,CSLIGHT,DR,DT,STOT,NPT,EM,ER,EDEN,ETEM,
     *               EHQPR,EDELR,ESPEC,EDXDR,EM_H,ER_H,EDEN_H,ETEM_H,EHQPR_H,
     *               EDELR_H,ESPEC_H,EDXDR_H,THEA,THEZ,J)

      use params, only : json
      use settings, only : ISHORT, IOWR  ! /LUOUT/
      use settings, only : C4PI  ! /CONST1/

      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
      COMMON/GRAVST/GRTOL,ILAMBDA,NITER_GS,LDIFY
      COMMON/THEAGE/DAGE
C MHP 3/94 ADDED METAL DIFFUSION
      DIMENSION HCOMP(15,JSON),HQPR(JSON),HR(JSON),HS1(JSON),HT(JSON),
     *          HD(JSON),HRU(JSON),HTU(JSON),LC(JSON)
      DIMENSION EM(JSON),ER(JSON),EDEN(JSON),ETEM(JSON),EHQPR(JSON),
     *          EDELR(JSON),ESPEC(3,JSON),EDXDR(JSON),EM_H(JSON),ER_H(JSON),
     *          EDEN_H(JSON),ETEM_H(JSON),EHQPR_H(JSON),EDELR_H(JSON),
     *          ESPEC_H(3,JSON),EDXDR_H(JSON)
      DIMENSION ED(JSON),ED_H(JSON),ED_ORIG(JSON),ED_ORIG_H(JSON),
     *          ED_P(JSON),ED_PRIME(JSON),ED_HALF(JSON),ECOD1(JSON),
     *          ECOD1_H(JSON),ECOD2(JSON),ECOD2_H(JSON),
     *          EQCOD2X_H(JSON)
      DIMENSION ALPHA(JSON),A(JSON),B(JSON),C(JSON)
      SAVE
C
C THIS PROGRAM EXECUTES THE DIFFUSING OF ELEMENTS. ALL OF THE RELEVANT
C PARAMETERS ARE DEFINED AT BOTH THE GRID POINTS AND MIDPOINTS.
C
C CREATE DUMMY VECTORS FOR THE DIFFUSING ELEMENT. THIS ALLOWS A SINGLE
C ELEMENT TO BE EASILY PASSED INTO SUB-ROUTINES.
C
      DO I=1,NPT-1
         ED(I) = ESPEC(J,I)
         ED_H(I) = ESPEC_H(J,I)
      ENDDO
      ED(NPT) = ESPEC(J,NPT)
C
C STORE ORIGINAL RUN OF LIGHT ELEMENT MASS FRACTIONS IN VECTOR ED_ORIG.
C THE CHANGE IN ELEMENTS (ED - ED_ORIG) IS INTERPOLATED BACK TO THE
C ORIGINAL GRID AT THE END OF THE ROUTINE; THE CHANGE IN ABUNDANCE
C (RATHER THAN THE NEW RUN OF ABUNDANCE) IS USED TO MINIMIZE ERRORS
C ARISING FROM THE INTERPOLATION.
      DO I = 1,NPT-1
         ED_ORIG(I) = ED(I)
         ED_ORIG_H(I) = ED_H(I)
      ENDDO
      ED_ORIG(NPT) = ED(NPT)
c
C  SET THE FLAG LDOLI = TRUE, SO THAT THE LAX-WENDROF ROUTINES KNOW TO NOT
C  USE THE OLD METAL DIFFUSION VECTORS.
      LDOLI = .TRUE.
c
C NOW USE THE EQUALLY SPACED GRID TO CALUCLATE DIFFUSION COEFFICIENTS IN THE
C METHOD OF THE THOUL ROUTINE. MUCH OF THE FOLLOWING CODE WAS TAKEN FROM
c SETUP_LISETT.F.
C
      CALL MICRODIFF_COD(NPT,ESPEC,ER,EDEN,ETEM,EHQPR,EDELR,ECOD1,ECOD2,
     *                   EDXDR,THEA,THEZ,J)
C
C FIRST STEP OF TWO STEP LAX-WENDROFF METHOD. COMPUTE NEW ABUNDANCES AT ZONE
C MIDPOINTS USING THE LAX SCHEME :
C X(N+1/2,J+1/2)=1/2(X(N,J+1/2)-1/2(DT/DR)(COD1(N,J+1)-COD1(N,J))
C WHERE N IS THE TIME VARIABLE, J IS THE SPATIAL ONE, AND COD1 IS THE
C DIFFUSION COEFFICIENT.
C
      CALL LAX_WENDROF1(DT,ECOD1,EM,NPT,STOT,ED_H,LDOLI)
C
C UPDATE ESPEC WITH THE NEW RUN OF ED_H, FOR THE PURPOSE OF
C CALUCLATING NEW DIFFUSION COEFFICIENTS.
C
      DO I=1,NPT-1
         ESPEC_H(J,I) = ED_ORIG_H(I) + ED_H(I)
      ENDDO
C
C GET NEW DIFFUSION COEFFICIENTS AT THE ZONE MIDPOINTS, USING THE
C PROVISIONAL SOLUTION. NOTE THAT NPT-1 MUST BE PASSED IN, AS THE
c MIDPOINTS HAVE ONE LESS GRID ELEMENT.
C
      NPT2 = NPT-1
      CALL MICRODIFF_COD(NPT2,ESPEC_H,ER_H,EDEN_H,ETEM_H,EHQPR_H,
     *     EDELR_H,ECOD1_H,ECOD2_H,EDXDR_H,THEA,THEZ,J)
C
C USING THE NEW COEFFICIENTS, SOLVE FOR THE NEW RUN OF ABUNDANCES.
C NOTE : THE SR ACTUALLY RETURNS THE *CHANGE* IN THE ABUNDANCE AS A FUNCTION
C OF RADIUS, WHICH IS APPLIED TO THE ORIGINAL RUN OF ELEMENTS, RATHER THAN
C COMPUTING A NEW RUN OF ABUNDANCE AND TRANSFORMING IT BACK.  THIS IS DONE
C TO MINIMIZE ERRORS FROM THE INTERPOLATION.
C
      CALL LAX_WENDROF2(DT,ECOD1_H,EM_H,ED,NPT,STOT,LDOLI)
C
C  NOW IMPLICITLY SOLVE FOR THE SECOND TERM (INVOLVING THE SECOND
C  DERIVATIVE OF THE COMPOSITION GRADIENT). FIRST DEFINE VECTOR ED_P,
C  WHICH IS THE ABUNDANCE AT THE START OF THE TIMESTEP, AND ELI_PRIME,
C  THE ABUNDANCE ONE WOULD HAVE WITHOUT THE SECOND TERM IN THE DIFFUSION
C  EQUATION.
      DO I = 1,NPT
         ED_P(I) = ED_ORIG(I)
         ED_PRIME(I) = ED(I)
      ENDDO
C  ALPHA IS THE NUMERICAL FACTOR IN FRONT OF THE DIFFUSION COEFFICIENTS.
      FAC = C4PI*DT/DR
      ALPHA(1) = FAC/EM_H(1)
      DO I = 2,NPT-1
         ALPHA(I) = FAC/(EM_H(I)-EM_H(I-1))
      ENDDO
      ALPHA(NPT) = FAC/(STOT-EM_H(NPT-1))
C  START ITERATION LOOP FOR THE NEW RUN OF ABUNDANCES.
      DO 100 ITER=1,NITER_GS
C  FIND CHANGE IN D AT THE ZONE MIDPOINTS, GIVEN CHANGE IN D AT
C  THE ZONE CENTERS.
         DO I = 2,NPT
            ED_H(I) = 0.5D0*(ED(I)+ED(I-1)-ED_P(I)-ED_P(I-1))
         ENDDO
C  STORE CURRENT RUN OF ABUNDANCES IN VECTOR ED_P. THE ITERATION
C  LOOP IS COMPLETED ONCE ED - ED_P IS EVERYWHERE LESS THAN THE TOLERANCE
C  GRTOL. ALSO ZERO OUT EQCOD2X_H, WHICH IS ONLY USED IN GRSETT (OLD SETTLING
C  ROUTINE), BUT RETAINED FOR LEGACY.
         DO I = 1,NPT-1
            ED_P(I) = ED(I)
            EQCOD2X_H(I) = 0.0
         ENDDO
         ED_P(NPT) = ED(NPT)
C  GET NEW DIFFUSION COEFFICIENTS, TAKING INTO ACCOUNT THE CHANGE IN D
C  FROM THE PREVIOUS ITERATION.
C
         CALL GET_IMP_DIFFCO(ALPHA,ECOD2_H,ED_H,EQCOD2X_H,A,B,C,NPT)
C
C  SOLVE THE TRIDIAGONAL MATRIX SYSTEM FOR THE NEW RUN OF LI.
C
         CALL TRIDIAG_GS(A,B,C,ED_PRIME,NPT,ED)
C
C  CHECK TO SEE IF THE CORRECTIONS TO THE HYDROGEN ABUNDANCE ARE SMALL
C  ENOUGH TO EXIT.
         DXMAX = 0.0D0
         IMAX = 0
         DO I = 1,NPT
            DX = ED(I)-ED_P(I)
            IF(DX.GT.DXMAX)THEN
               DXMAX = DX
               IMAX = I
            ENDIF
         ENDDO
         WRITE(ISHORT,90)ITER,DXMAX,IMAX
 90      FORMAT(1X,'ITERATION ',I3,' DXMAX ',1PE10.2,' IMAX ',I4)
C  EXIT ITERATION LOOP IF SYSTEM HAS CONVERGED.
         IF(DXMAX.LT.GRTOL)GOTO 120
 100  CONTINUE
      WRITE(IOWR,110)GRTOL,NITER_GS,DXMAX,IMAX
      WRITE(ISHORT,110)GRTOL,NITER_GS,DXMAX,IMAX
 110  FORMAT(1X,'MICRODIFF FAILED TO CONVERGE TO WITHIN ',1PE9.3,' IN ',I3,
     *     'ITERATIONS'/1X,'LAST ITERATION CHANGE IN D ',1PE9.3,
     *     ' IN EQUALLY SPACED SHELL ',I5)
 120  CONTINUE
C
C  STORE THE RUN OF CHANGES IN THE DIFFUSED ELEMENT.
      DO I = 1,NPT
         ESPEC(J,I) = ED(I)-ED_ORIG(I)
      ENDDO
      RETURN
      END
