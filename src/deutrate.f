C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
C DEUTRATE - COMPUTE THE RATE OF NONEQUILIBRIUM DEUTERIUM BURNING
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
      SUBROUTINE DEUTRATE(DL,TL,X,XH2,I,ITLVL)
      use mmodel, only : json
      use settings, only : CLN, CC13  ! /CONST1/
      use settings, only : TAUCZ  ! /OVRTRN/

      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
      COMMON/DEUTER/DRATE(JSON),DRATE0(JSON),FMASSACC,JCZ
      DATA C21/5.240358E-8/
      SAVE
C T9P13 IS THE TEMPERATURE IN UNITS OF 10^9 DEGREES K TO THE PLUS 1/3
C  POWER.  MINUS IS DENOTED BY M.  HERE T9 IS THE TEMPERATURE IN UNITS
C  OF 10^9 K, CONVERTED FROM THE LOG_10 (T) AND RHO IS THE DENSITY IN
C  CGS UNITS.
      RHO=EXP(CLN*DL)
      T9 = EXP(CLN*(TL - 9.0D0))
      T9P13 = T9**CC13
      T9P23 = T9P13**2
      T9M13=1.0D0/T9P13
      T9M23=T9M13**2
      T9M1=1.0D0/T9
C MHP 5/02 ADD DEUTERIUM BURNING TERM TO THE CODE
C IF DEUTERIUM IS ABOVE A MINIMUM THRESHOLD VALUE.
C RDEUT IS THE RATE (EXCLUDING FACTORS OF THE
C ABUNDANCES) AND QRTDEUT IS THE DERIVATIVE W/R/T T.
C NOTE THAT SCREENING IS EXCLUDED - REASONABLE GIVEN
C THE LOW TEMPERATURES INVOLVED.
      Z = -3.72D0*T9M13
      TFACDEUT = 1.0D0+0.112D0*T9P13+3.38D0*T9P23+2.65D0*T9
C FACTOR OF 3.0115D23 REFLECTS AVAGADROS NUMBER DIVIDED BY THE
C MASS OF THE DEUTERON IN AMU
      RDEUT = RHO*2.240D3*T9P23*EXP(Z)*TFACDEUT*3.0115D23
C NOW LIMIT DEUTERIUM BURNING IN A SURFACE CZ TO BE ON A TIME SCALE
C NO SHORTER THAN THE CONVECTIVE OVERTURN TIMESCALE.
      IF(I.GE.JCZ .AND. TAUCZ.GT.1.0D0)THEN
         RDEUTMAX = 3.0115D23/TAUCZ
         RDEUT2 = RDEUT*X
         IF(I.EQ.JCZ)THEN
C JVS 0712 Commented out write command
c            WRITE(*,911)RDEUT2,RDEUTMAX,TAUCZ
 911        FORMAT(1P3E15.8)
         ENDIF
         IF(RDEUT2.GT.RDEUTMAX)THEN
C JVS 0712 Commented out write command
c            WRITE(*,*)RDEUT2,RDEUTMAX
            IF(X.GT.1.0D-6)THEN
               RDEUT = RDEUTMAX/X
            ENDIF
         ENDIF
      ENDIF
      DRATE(I) = X*RDEUT*C21
      IF(ITLVL.EQ.1)THEN
         DRATE0(I) = DRATE(I)
      ENDIF
      RETURN
      END
