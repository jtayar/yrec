C  SUBROUTINE FOR GENERATING SURFACE X AND Z TABLES FOR ALEXANDER OPACITIES
      SUBROUTINE ALEX06TAB
      use params, only : numx => numx06, numz => numz06, numxz => numxz06, numt => numt06, numd => numd06
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
      COMMON /GALOT06/TGR06(NUMT),XXG06(NUMX),R0GR06(NUMD),ZZG06(NUMZ)
      COMMON /ALOT06/CAPALEX06(NUMT,NUMD),XE,ZE,IX,IT,ID
      COMMON /ALOT06ALL/CAPTALEX06(NUMXZ,NUMT,NUMD)
      REAL*8 QR(4),FX(4), CAPTEMP(4,NUMT,NUMD)
      SAVE
C  XE = DESIRED X; ZE = DESIRED Z
      XMAX = 1.0D0 - ZE
C CHECK THAT THE REQUESTED COMPOSITION IS INSIDE TABLE BOUNDS
      IF(XE.LT.0.0D0 .OR. XE. GT. XMAX)THEN
         WRITE(*,5) XE,ZE
 5       FORMAT('ILLEGAL COMPOSITION (X,Z) = ',2F6.2,' IN ALEX06.RUN STOPPED')
         STOP
      ENDIF
C PERMIT EXTRAPOLATION IN Z BY UP TO 1 TABLE ELEMENT
      ZMAX = ZZG06(NUMZ)+(ZZG06(NUMZ)-ZZG06(NUMZ-1))
      IF(ZE.LT.0.0D0 .OR. ZE. GT. ZMAX)THEN
         WRITE(*,5) XE,ZE
         STOP
      ENDIF
C FIND 4 NEAREST TABLES IN Z.
      DO I = 3,NUMZ-2
         IF(ZE.LE.ZZG06(I))THEN
            IZ = I - 2
            GOTO 7
         ENDIF
      END DO
      IZ = NUMZ - 3
 7    CONTINUE
C FIND 4 NEAREST TABLES IN X.
      DO I = 3,NUMX-2
         IF(XE.LE.XXG06(I))THEN
            IX = I - 2
            GOTO 10
         ENDIF
      END DO
C NO TABLE FOR X > 0.9 IF Z =0.10 OR MORE
      IF(ZE.GE.0.1D0)THEN
         IX = NUMX - 4
      ELSE
         IX = NUMX - 3
      ENDIF
 10   CONTINUE
C INTERPOLATION FACTORS FOR Z
      DO I = 1,4
         QR(I) = ZZG06(IZ+I-1)
      END DO
C      WRITE(*,*)ZE,(QR(I),I=1,4)
      X = ZE
      CALL INTRP2(QR,FX,X)
C THE DIFFERENCE IN THE NUMBER OF TABLES FOR THE Z=0.1 CASE REQUIRES SOME
C CARE IN X INTERPOLATION.  FIRST 3 X CASES CAN BE TREATED NORMALLY.
      DO K = 1,3
         KK = NUMZ*(IX+K-2)+IZ
         KK2 = KK + 1
         KK3 = KK2 + 1
         KK4 = KK3 + 1
         DO I = 1,NUMT
            DO J = 1,NUMD
               CAPTEMP(K,I,J) = FX(1)*CAPTALEX06(KK,I,J)+
     *         FX(2)*CAPTALEX06(KK2,I,J) + FX(3)*CAPTALEX06(KK3,I,J) +
     *         FX(4)*CAPTALEX06(KK4,I,J)
            END DO
         END DO
      END DO
C IF IN THE HIGH Z AND HIGH X DOMAIN THE TOP TABLE IS X = 1-Z (ENTRY NUMX) EXCEPT
C FOR THE Z=0.10 CASE (WHERE THE X=0.9 CASE DOUBLES AS THE X=1-Z CASE).
      IF(IX.EQ.NUMX-3.AND.IZ.EQ.NUMZ-3)THEN
C USE DIFFERENT INDEXING FOR THE LAST TABLE
         KK = NUMZ*(IX+2)+IZ
         KK2 = KK + 1
         KK3 = KK2 + 1
         KK4 = NUMZ*(IX+2)
      ELSE
         KK = NUMZ*(IX+2)+IZ
         KK2 = KK + 1
         KK3 = KK2 + 1
         KK4 = KK3 + 1
      ENDIF
      DO I = 1,NUMT
         DO J = 1,NUMD
            CAPTEMP(4,I,J) = FX(1)*CAPTALEX06(KK,I,J)+
     *      FX(2)*CAPTALEX06(KK2,I,J) + FX(3)*CAPTALEX06(KK3,I,J) +
     *      FX(4)*CAPTALEX06(KK4,I,J)
         END DO
      END DO
C NOW DO X INTERPOLATION
C INTERPOLATION FACTORS FOR X
      DO I = 1,3
         QR(I) = XXG06(IX+I-1)
      END DO
      IF(IZ.EQ.NUMZ-3)THEN
         QR(4) = 1.0D0-ZE
      ELSE
         QR(4) = XXG06(IX+3)
      ENDIF
      X = XE
      CALL INTRP2(QR,FX,X)      
C      WRITE(*,*)XE,(QR(I),I=1,4)
      DO I = 1,NUMT
         DO J = 1,NUMD
            CAPALEX06(I,J) = FX(1)*CAPTEMP(1,I,J)+
     *      FX(2)*CAPTEMP(2,I,J) + FX(3)*CAPTEMP(3,I,J) +
     *      FX(4)*CAPTEMP(4,I,J)
         END DO
      END DO
C      WRITE(*,*)TGR06(NUMT),R0GR06(NUMD),CAPALEX06(NUMT,NUMD)
      RETURN
      END
