C$$$$$$
C MHP 10/02 UNUSED LFIRST REMOVED FROM CALL
      SUBROUTINE MWIND(BL,DELTS,HSBOT,HSTOP,JSTART,JEND,LJDOT,OMEGAS,
     *                SJTOT,SMASS,TEFFL,HICZ,HJM)
C     *                SJTOT,SMASS,TEFFL,HICZ,HJM,LFIRST)

      use mmodel, only : json
      use settings, only : CLSUNL, CMSUN, CRSUN  ! /CONST/
      use settings, only : CLN, C4PIL  ! /CONST1/
      use settings, only : CSIGL, CGL  ! /CONST2/
      use settings, only : CSECYR  ! /CONST3/
      use settings, only : WNEW  ! /ROT/
      use settings, only : AWIND, LMWIND, LROSSBY, LBSCALE, PMMSOLW, PMMSOLTAU  ! /PMMWIND/
      use settings, only : WMAX, EXW, CONSTFACTOR, STRUCTFACTOR, EXCEN, C_2  ! /CWIND/
      use settings, only : TAUCZ, TAUCZ0, FRACSTEP  ! /OVRTRN/

      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
      DIMENSION HJM(JSON)
C MHP 3/09 ADDED OPTION TO SCALE THE SATURATION RATE BY THE OVERTURN TIMESCALE
      COMMON/DEUTER/DRATE(JSON),DRATE0(JSON),FMASSACC,JCZ
      SAVE
C IF DESIRED, REMOVE ANGULAR MOMENTUM FROM OUTER CONVECTION ZONE
C USING A WEBER-DAVIS MAGNETIC WIND MODEL
      IF(.NOT.LMWIND)THEN
         CALL WIND(BL,DELTS,HSBOT,HSTOP,JSTART,JEND,LJDOT,OMEGAS,
     *                SJTOT,SMASS,TEFFL,HICZ,HJM)
         GOTO 9999
      ENDIF
C
C ADD ROSSBY SCALING IF DESIRED.
      IF(LROSSBY)THEN
C MHP 8/17 CORRECTED TAUCZ CALCULATION TO INTERPOLATE PROPERLY IN TIMESTEP
         TCZ = TAUCZ0+FRACSTEP*(TAUCZ-TAUCZ0)
         IF(LBSCALE)THEN
C G Somers 8/17 CREATE ROTATION DUMMY VARIABLES.
            WNOW = OMEGAS*TCZ/PMMSOLTAU
            WSAT = WMAX
         ELSE
            WNOW = OMEGAS
            WSAT = WMAX*PMMSOLTAU/TCZ
         ENDIF
C If not scaling, just set dummies to the original values.
      ELSE
         WNOW = OMEGAS
         WSAT = WMAX
      ENDIF
C
C G Somers 3/17, CHANGING WINDLAW TO NEW MATT+2012 METHOD.
C
C FIND TOTAL RADIUS OF STAR.
C G Somers - CGRAV, RTOT not used, so blacking out.
C         CGRAV = DEXP(CLN*CGL)
C         RL=0.5D0*(BL+CLSUNL-C4PIL-CSIGL-4.D0*TEFFL)
C         RTOT = DEXP(CLN*RL)
C DMDOT IS THE MASS LOSS RATE IN SOLAR MASSES PER YEAR.
C G Somers - Don't need DMDOT anymore.
C         DMDOT = 2.0D-14
C DJ/DT = DT*FACTOR*(DMDOT/1.0D-14)**EXMD*OMEGA**EXW*(M/MSUN)**EXM
C         *(R/RSUN)**EXR
C
C G Somers - New calculation. Call AMCALC to set "STRUCTFACTOR".
C
      CALL AMCALC(SMASS,BL,TEFFL)
C
C TEST : THE LOSS RATE DEPENDS ON OMEGA, AND FOR TIMESTESP THAT ARE
C TOO LARGE, ROTATION RATES THAT ARE TOO HIGH, AND THIN SURFACE C.Z.S
C NEGATIVE SURFACE ANGULAR VELOCITIES CAN BE PRODUCED.
C TO AVOID THIS, CHECK THAT THE TIMESTEP IS SMALL ENOUGH TO ALLOW
C A POSITIVE SOLUTION FOR OMEGA IN THE FIRST GUESS AT THE LOSS RATE.
C IF NOT, USE A SERIES OF SMALL STEPS.
C MHP 12/91 CAP LOSS RATE AT WSAT.
C
C G Somers, Commenting out the old DWTEST, adding the PMM version.
C         DWTEST = (DELTS/HICZ)*FACTOR*(DMDOT/1.0D-14)**EXMD
C     *          *OMEGAS*(RTOT/CRSUN)**EXR*SMASS**EXM
C     *          *MIN(OMEGAS,WSAT)**(EXW-1.0D0)
C MHP 8/17 ADDED CENTRIFUGAL REDUCTION TERM FROM MATT+2012 ApJ 754, L26
C NOTE THAT THIS IS IMPLEMENTED HERE RELATIVE TO THE SUN
C      C_2 = 0.0506
      FSUN = 0.5*PMMSOLW**2*CRSUN**3/EXP(CLN*CGL)/CMSUN
C     RADIUS
      RL = 0.5D0*(BL+CLSUNL-C4PIL-CSIGL-4.D0*TEFFL)
      FCORR = 0.5*OMEGAS**2*EXP(CLN*(3.0*RL-CGL))/SMASS/CMSUN
      FCEN = ((C_2**2+FSUN)/(C_2**2+FCORR))**EXCEN
      DWTEST = (DELTS/HICZ)*CONSTFACTOR*STRUCTFACTOR*OMEGAS
     *          *MIN(WNOW,WSAT)**(EXW-1.0D0)*FCEN
C      DWTEST = (DELTS/HICZ)*CONSTFACTOR*STRUCTFACTOR*OMEGAS
C     *          *MIN(OMEGAS,WSAT)**(EXW-1.0D0)
C G Somers END
      IF(DWTEST.GT.OMEGAS)THEN
         NSTEP = INT(DWTEST/OMEGAS)+1
         DT = DELTS/DFLOAT(NSTEP)
      ELSE
         NSTEP = 1
         DT = DELTS
      ENDIF
C      WRITE(*,3)NSTEP
C    3 FORMAT(5X,I5)
      WS = OMEGAS
      DO 100 N = 1,NSTEP
C  THE CONSTANT AND EXPONENTS ARE SET IN PARMIN BASED ON THE INPUT
C  INDEX ALFA;SEE PARMIN FOR DETAILS ON THE DEPENDENCE OF EACH ON ALFA.
C  ITERATIVE SOLUTION : FOR FIRST GUESS, USE OMEGA=INITIAL OMEGA IN
C  COMPUTING LOSS RATE. TO COMPUTE SUBSEQUENT RATES, USE THE AVERAGE OF THE
C  STARTING OMEGA AND THE *PREVIOUS* ENDING OMEGA (I.E. AVERAGE EXPLICIT
C  AND IMPLICIT SOLUTIONS).
         K = 0
         W = WS
         WNEW0 = WS
    5    CONTINUE
C G Somers 08/17 IF ADDING ADDITIONAL B SCALING, ADD ADDITIONAL TAUCZ TERM.
         IF(LBSCALE)THEN
            WNOW = W*TCZ/PMMSOLTAU
         ELSE
            WNOW = W
         ENDIF
         K = K + 1
C G Somers, Commenting out the old WNEW, adding the PMM version.
C         WNEW = WS - (DT/HICZ)*FACTOR*(DMDOT/1.0D-14)**EXMD
C     *          *W*(RTOT/CRSUN)**EXR*SMASS**EXM
C     *          *MIN(W,WSAT)**(EXW-1.0D0)
C MHP 8/17 ADDED CENTRIFUGAL REDUCTION TERM FROM MATT+2012 ApJ 754, L26
C NOTE THAT THIS IS IMPLEMENTED HERE RELATIVE TO THE SUN
         FCORR = 0.5*W**2*EXP(CLN*(3.0*RL-CGL))/SMASS/CMSUN
         FCEN = ((C_2**2+FSUN)/(C_2**2+FCORR))**EXCEN
         WNEW = WS - (DT/HICZ)*CONSTFACTOR*STRUCTFACTOR*W
     *          *MIN(WNOW,WSAT)**(EXW-1.0D0)*FCEN
C         WNEW = WS - (DT/HICZ)*CONSTFACTOR*STRUCTFACTOR*W
C     *          *MIN(W,WSAT)**(EXW-1.0D0)
C G Somers END
         DW = 2.0D0*ABS((WNEW0-WNEW)/(WNEW0+WNEW))
C       WRITE(*,4)WS,W,WNEW,DW,HICZ
C    4 FORMAT(1X,1P5E14.6)
         IF(DW.GT.1.0D-6)THEN
            W = 0.5D0*(WS+WNEW)
            WNEW0 = WNEW
            IF(K.LE.20)GOTO 5
         ENDIF
         WS = WNEW
  100 CONTINUE
C     CON = DELTS*FACTOR*(DMDOT/1.0D-14)**EXMD*OMEGAS**(EXW-1.0D0)
C    *        *(RTOT/CRSUN)**EXR*SMASS**EXM
C     FJDOT = CON*OMEGAS/(1.0D0+(EXW*CON/HICZ))
C DM IS THE TOTAL MASS IN THE CONVECTION ZONE.
      DM = HSTOP - HSBOT
C FIND CHANGE IN ANGULAR MOMENTUM PER UNIT MASS AND SUBTRACT THIS
C NUMBER FROM THE J/M OF EACH SHELL IN THE SURFACE CONVECTION ZONE.
      FJDOM = (OMEGAS-WNEW)*HICZ/DM
C      WRITE(*,11)FJDOM,HJM(JSTART),HJM(JEND)
C   11 FORMAT(5X,1P3E14.6)
C     FJDOM=FJDOT/DM
C     TAUJ=SJTOT/(FJDOT/DELTS)/CSECYR
      DO 10 II = JSTART,JEND
         HJM(II) = HJM(II) - FJDOM
  10  CONTINUE
 9999 CONTINUE
      RETURN
      END
