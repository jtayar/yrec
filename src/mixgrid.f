C $$$$$$
      SUBROUTINE MIXGRID(COD2,HD,HL,HP,HR,HS,HS1,HS2,
     *                   HSTOT,IBEG,IEND,LCZ,M,
     *                   ECOD2,EM,LDUM2)
      use params, only : json
      use settings, only : CLSUN  ! /CONST/
      use settings, only : CLN, C4PI  ! /CONST1/
      use settings, only : CGL  ! /CONST2/
      use settings, only : HPTTOL  ! /CTOL/

      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
      COMMON/EGRID/CHI(JSON),ECHI(JSON),ES1(JSON),DCHI,NTOT
      COMMON/MDPHY/AMUM(JSON),CPM(JSON),DELM(JSON),DELAM(JSON),
     *             DELRM(JSON),ESUMM(JSON),OM(JSON),QDTM(JSON),
     *             THDIFM(JSON),VELM(JSON),VISCM(JSON),EPSM(JSON)
      COMMON/SPLIN/XVAL(JSON),YVAL(JSON),XTAB(JSON),YTAB(JSON)
C INPUT VARIABLES
      DIMENSION HD(JSON),HL(JSON),HP(JSON),
     *          HR(JSON),HS(JSON),HS1(JSON),HS2(JSON),
     *          LCZ(JSON),COD2(JSON)
C OUTPUT VARIABLES
      DIMENSION ECOD2(JSON),EM(JSON)
      SAVE
C FLAG THE SPECIAL CASE OF A SINGLE UNSTABLE INTERFACE AND EXIT
      IF(IEND-IBEG.LE.1)THEN
         LDUM2 = .TRUE.
         GOTO 9999
      ELSE
         LDUM2 = .FALSE.
      ENDIF
C DEFINE A GRID OF EQUALLY SPACED POINTS.
      CALL GETGRID(HL,HP,HS,IBEG,IEND,M)
C GETGRID HAS DEFINED A SET OF CO-ORDINATES (CHI) AND EQUALLY SPACED
C MASS POINTS.  NOW FIND THE OTHER QUANTITIES OF INTEREST AT ZONE
C CENTERS:
C TOTAL ZONE MASSES
C INTERMEDIATE POINTS
      DO I = 2, NTOT-1
         EM(I) = 0.5D0*(ES1(I+1)-ES1(I-1))
      END DO
C SPECIAL TREATMENT OF THE BOUNDARIES; CAN BE CONVECTIVE.
C IF CONVECTIVE SUM OVER ALL SHELLS.  CARE IS NEEDED TO DO BOOK-KEEPING
C PROPERLY AT THE EDGES - TOP IS HALFWAY TO EQUALLY SPACED POINT, NOT
C HALFWAY TO EDGE OF UNEQUALLY SPACED ORIGINAL SET OF POINTS.
C
C CENTER
      EMTOP = 0.5D0*(ES1(2)+ES1(1))
      IF(IBEG.GT.1)THEN
         EMBOT = 0.5D0*(HS1(IBEG)+HS1(IBEG-1))
      ELSE
         EMBOT = 0.0D0
      ENDIF
      EM(1) = EMTOP - EMBOT
      IF(IBEG.GT.1)THEN
         DO II = IBEG-1,1,-1
            IF(.NOT.LCZ(II))THEN
               I0 = I + 1
               GOTO 10
            ENDIF
            EM(1) = EM(1)+HS2(II)
         END DO
         I0 = 1
 10      CONTINUE
      ELSE
         I0 = 1
      ENDIF
C SURFACE
      EMBOT = 0.5D0*(ES1(NTOT)+ES1(NTOT-1))
      IF(IEND.LT.M)THEN
         EMTOP = 0.5D0*(HS1(IEND)+HS1(IEND+1))
      ELSE
         EMTOP = EXP(CLN*HSTOT)
      ENDIF
      EM(NTOT) = EMTOP - EMBOT
      IF(IEND.LT.M)THEN
         DO II = IEND+1,M
            IF(.NOT.LCZ(II))THEN
               I1 = I -1
               GOTO 20
            ENDIF
            EM(NTOT) = EM(NTOT)+HS2(II)
         END DO
         I1 = M
 20      CONTINUE
      ELSE
         I1 = M
      ENDIF
C NOW SOLVE FOR QUANTITIES NEEDED AT THE ZONE EDGES.  THESE ARE
C RELATED TO THE DIFFUSION COEFFICIENTS.  UNLIKE THE EQUALLY SPACED
C GRID IN R, WE NEED TO INCLUDE A JACOBIAN TERM FOR THE TRANSFORMATION
C OF VARIABLES.
      NTAB = IEND - IBEG + 1
      XTAB(1) = CHI(1)
      DO I = 2,NTAB
         XTAB(I) = 0.5D0*(CHI(I)+CHI(I-1))
      END DO
      NTABB = NTAB + 1
      XTAB(NTABB) = CHI(NTAB)
C DIFFUSION COEFFICIENT FOR MIXING - ASSUME CONSTANT BELOW
C BOTTOM INTERFACE OR ABOVE TOP INTERFACE
      YTAB(1) = COD2(IBEG+1)
      DO I = 2,NTAB
         II = IBEG + I - 1
         YTAB(I) = COD2(II)
      END DO
      YTAB(NTABB) = COD2(IEND)
      XVAL(1) = CHI(1)
      DO I = 2, NTOT
         XVAL(I) = ECHI(I)-0.5D0*DCHI
      END DO
      CALL OSPLIN(XVAL,ECOD2,XTAB,YTAB,NTABB,NTOT)
C PRODUCT OF RHO R^2 BY D CHI/DR
      DM = HPTTOL(2)
      DL = HPTTOL(9)*HL(M)*CLSUN
      DP = HPTTOL(11)
      DO I = 1, NTAB
         II = IBEG + I - 1
         XTAB(I) = CHI(I)
C D CHI/DR = 1/DM*( D LOG M/DR) + 1/DL*(DL/DR) - 1/DP*(D LOG P/DR)
C OR, USING FAC = 4*PI*RHO*R**2
C D CHI/DR = FAC/(LN 10 * DM * M) + FAC*EPSILON/DL + RHO*GM/(LN10*DP*R**2)
C STORED IN YVAL
         FAC = C4PI*EXP(CLN*(HD(II)+2.0D0*HR(II)))
         QCHIR = FAC/(CLN*DM*HS1(II))+FAC*EPSM(II)/DL+
     *   EXP(CLN*(CGL+HD(II)+HS(II)-HP(II)-2.0D0*HR(II)))/(CLN*DP)
         YTAB(I) = HD(II) + LOG10(QCHIR) + 2.0D0*HR(II)
      END DO
      CALL OSPLIN(XVAL,YVAL,XTAB,YTAB,NTAB,NTOT)
C NOW ADD MULTIPLICATIVE FACTORS TO DIFFUSION COEFFICIENTS
      DO I = 1, NTOT
         ECOD2(I) = ECOD2(I)*EXP(CLN*YVAL(I))
      END DO
 9999 CONTINUE
      RETURN
      END
