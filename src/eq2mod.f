C $$$$$$
      SUBROUTINE EQ2MOD(DJ,EJ,HS2,IBEG,IEND,LCZ,M,SUMDJ,HJM)
      use params, only : json
      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
      COMMON/SPLIN/XVAL(JSON),YVAL(JSON),XTAB(JSON),YTAB(JSON)
      COMMON/EGRID/CHI(JSON),ECHI(JSON),ES1(JSON),DCHI,NTOT
      DIMENSION DJ(JSON),EJ(JSON),HS2(JSON),LCZ(JSON),HJM(JSON)
      SAVE
C  THE DIFFUSION EQUATION FOR ANGULAR MOMENTUM TRANSPORT IS SOLVED USING AN
C  EQUALLY SPACED GRID FOR EACH UNSTABLE REGION.  ONCE THE EQUATION HAS
C  BEEN SOLVED, WE NEED THE NEW RUN OF ANGULAR MOMENTUM AT THE ORIGINAL
C  MODEL POINTS.
C
C  EQUAL2 TRANSFORM BACK TO THE ORIGINAL GRID AND CALCULATE THE CHANGE IN
C  SPECIFIC ANGULAR MOMENTUM IN EACH SHELL.
C
C  INPUT VARIABLES:
C
C     VARIABLES PERTAINING TO THE EQUALLY SPACED GRID POINTS USED TO SOLVE
C     THE DIFFUSION EQUATION :
C
C  DJ - CHANGE IN J AT EACH POINT DUE TO ROTATIONALLY INDUCED INSTABILITIES.
C  EJ - CONTAINS THE RUN OF ANGULAR MOMENTUM PRIOR TO ANGULAR MOMENTUM
C       REDISTRIBUTION.
C  NTOT - NUMBER OF EQUALLY SPACED GRID POINTS IN THE UNSTABLE REGION.
C  SUMDJ - TOTAL CHANGE IN ANGULAR MOMENTUM ACROSS GRID
C     VARIABLES PERTAINING TO THE ORIGINAL MODEL POINTS :
C
C  HS2 - THE UNLOGGED MASS CONTENT OF THE MODEL POINTS.
C  IBEG,IEND - THE FIRST AND LAST MODEL POINTS CONTAINED IN THE UNSTABLE
C  REGION.
C  LCZ - A LOGICAL ARRAY WHICH IS T IF THE MODEL POINT IS CONVECTIVE FOR
C  ANGULAR MOMENTUM PURPOSES AND F OTHERWISE.
C  M - THE TOTAL NUMBER OF MODEL POINTS.
C
C VARIABLES IN COMMON BLOCKS:
C
C /SPLIN/ CONTAINS DUMMY ARRAYS USED TO PERFORM AN OSCULATORY SPLINE
C INTERPOLATION.
C /EGRID/ CONTAINS THE VECTOR OF EQUALLY SPACED GRID POINTS.
C OUTPUT VARIABLE :
C  HJM - THE NEW RUN OF SPECIFIC ANGULAR MOMENTUM AT THE MODEL POINTS.
C -------------------------------------------------------------------------
C CHECK FOR LOWER AND UPPER CONVECTION ZONES.
      IF(.NOT.LCZ(IBEG) .OR. IBEG.EQ.1)THEN
         I0 = IBEG
      ELSE
         DO I = IBEG - 1, 1, -1
            IF(.NOT.LCZ(I))THEN
               I0 = I + 1
               GOTO 10
            ENDIF
         END DO
         I0 = 1
 10      CONTINUE
      ENDIF
      IF(.NOT.LCZ(IEND) .OR. IEND.EQ.M)THEN
         I1 = IEND
      ELSE
         DO I = IEND+1,M
            IF(.NOT.LCZ(I))THEN
               I1 = I - 1
               GOTO 20
            ENDIF
         END DO
         I1 = M
 20      CONTINUE
      ENDIF
C INTERPOLATE IN DJ/J AS A FUNCTION OF ECHI
      NMOD = IEND - IBEG + 1
      DO I = 1, NMOD
         XVAL(I) = CHI(I)
      END DO
      DO I = 1,NTOT
         XTAB(I) = ECHI(I)
         YTAB(I) = DJ(I)/EJ(I)
      END DO
      CALL OSPLIN(XVAL,YVAL,XTAB,YTAB,NTOT,NMOD)
C APPLY THE FRACTIONAL CHANGE IN J/M ACROSS THE MODEL.
      SUMJMOD = 0.0D0
      SUMDJMOD = 0.0D0
      IF(I0.LT.IBEG)THEN
         DO I = I0,IBEG-1
            SUMJMOD = SUMJMOD + HJM(I)*HS2(I)
            SUMDJMOD = SUMDJMOD + YVAL(1)*HJM(I)*HS2(I)
            HJM(I) = HJM(I)*(1.0D0+YVAL(1))
         END DO
      ENDIF
      DO I = IBEG,IEND
         II = I - IBEG + 1
         SUMJMOD = SUMJMOD + HJM(I)*HS2(I)
         SUMDJMOD = SUMDJMOD + YVAL(II)*HJM(I)*HS2(I)
         HJM(I) = HJM(I)*(1.0D0+YVAL(II))
      END DO
      IF(I1.GT.IEND)THEN
         DO I = IEND+1,I1
            SUMJMOD = SUMJMOD + HJM(I)*HS2(I)
            SUMDJMOD = SUMDJMOD + YVAL(NMOD)*HJM(I)*HS2(I)
            HJM(I) = HJM(I)*(1.0D0+YVAL(NMOD))
         END DO
      ENDIF
C CHECK THAT ANGULAR MOMENTUM HAS BEEN CONSERVED.  THE TOTAL ANGULAR
C MOMENTUM CAN BE REDUCED FROM SURFACE ANGULAR MOMENTUM LOSS; CARE IS
C USED HERE BECAUSE DUMDJ SHOULD BE ZERO IN MODELS WITHOUT LOSS.
      TEST = ABS(SUMDJMOD - SUMDJ)
      VAL = 1.0D-5*ABS(SUMDJ)
c      WRITE(*,*)SUMDJ,SUMDJMOD,SUMJMOD
c      WRITE(*,911)(DJ(I)/EJ(I),I=1,NTOT)
 911  FORMAT(1P8E10.2)
C IF THE TEST SUM IS NOT THE SAME WITHIN THE RELATIVE TOLERANCE VAL,
C ADJUST THE TOTAL ANGULAR MOMENTUM OF THE ENTIRE REGION BY A CONSTANT
C FACTOR TO ENFORCE ANGULAR MOMENTUM CONSERVATION.
      IF(TEST.GT.VAL)THEN
         RATIO = (SUMJMOD + SUMDJ)/(SUMJMOD + SUMDJMOD)
         DO I = I0, I1
            HJM(I) = HJM(I)*RATIO
         END DO
      ENDIF
      RETURN
      END
