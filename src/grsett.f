CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C GRESETT
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE GRSETT(DT,HCOMP,HQPR,HR,HD,HS1,HT,LC,M,STOT)

      use params, only : json
      use settings, only : ISHORT  ! /LUOUT/
      use settings, only : C4PI  ! /CONST1/

      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
      COMMON/GRAVST/GRTOL,ILAMBDA,NITER_GS,LDIFY
C MHP 3/94 ADDED METAL DIFFUSION
      COMMON/GRAVS3/FGRY,FGRZ,LTHOUL,LDIFZ
      COMMON/GRAVEZ/ECOD1Z(JSON),ECOD1Z_H(JSON),ECOD2Z_H(JSON),
     *              EQCOD1Z_H(JSON),EQCOD2Z_H(JSON),EZ(JSON),
     *              EZ_H(JSON)
      DIMENSION HCOMP(15,JSON),HQPR(JSON),HR(JSON),HS1(JSON),
     *  HT(JSON),EM(JSON),ER(JSON),A(JSON),B(JSON),C(JSON),
     *  EX(JSON),LC(JSON),HRU(JSON),HTU(JSON),HD(JSON),
     *  EM_H(JSON),EX_P(JSON),EX_ORIG(JSON),ALPHA(JSON),
     *  EX_H(JSON),COD1(JSON),COD2(JSON),QCOD1X(JSON),QCOD2X(JSON),
     *   ECOD1(JSON),ECOD1_H(JSON),EX_PRIME(JSON),
     *   ECOD2_H(JSON),EQCOD1X_H(JSON),EQCOD2X_H(JSON)
      DIMENSION EZ_ORIG(JSON),EZ_P(JSON)
      SAVE

C  GRSETT SOLVES FOR THE GRAVITATIONAL SETTLING OF HELIUM USING THE
C  FORMULISM OF BAHCALL AND LOEB 1989.  SETTLING OF METALS WILL BE ADDED
C  LATER.
C  GRSETT PERFORMS THE FOLLOWING SERIES OF OPERATIONS :
C  1)  TRANSFORMS TO AN EQUALLY SPACED GRID IN RADIUS (AND MANIPULATES
C  THE MODEL VARIABLES INTO BAHCALL AND LOEB UNITS).
C
C  THE DIFFUSION EQUATION HAS TWO TERMS : ONE THAT DEPENDS ON DLNP/DR*DX/DR
C  AND ONE THAT DEPENDS ON D^2X/DR^2. THE DIFFUSION COEFFICIENTS ARE
C  THEMSELVES FUNCTIONS OF BOTH THE THERMAL STRUCTURE AND X.
C  GRSETT SOLVES THIS DIFFUSION EQUATION IN TWO STEPS :
C  2) THE FIRST TERM IS SOLVED EXPLICITLY USING THE TWO-STEP
C  LAX-WENDROFF SCHEME (NUMERICAL RECIPES, PRESS ET AL. 1986,
C  CAMBRIDGE UNIVERSITY PRESS,P.633)
C  3) THE SECOND TERM IS SOLVED IMPLICITLY, USING THE MODIFIED RUN OF
C  ABUNDANCE FOUND IN STEP 2) AS THE 'INITIAL' RUN OF ABUNDANCE.
C  THE IMPLICIT SCHEME ITERATES ON THE DIFFUSION COEFFICIENTS UNTIL
C  THE SOLUTION CONVERGES TO WITHIN THE USER-SPECIFIED TOLERANCE GRTOL.
C
C  4) GRSETT THEN UPDATES THE ABUNDANCE ARRAY AND EXITS.
C
C  INPUT VARIABLES :
C
C  DT - TIMESTEP (SEC)
C  HCOMP - RUN OF MASS FRACTIONS OF SPECIES.HCOMP(1,..)=X,HCOMP(2,...)=Y
C          HCOMP(3,...)=Z
C  HQPR - DLNP/DR
C  HR - LOG RADIUS (CM)
C  HS1 - MASS (GM), UNLOGGED
C  HT - LOG TEMPERATURE (K)
C  LC - FLAG T/F FOR CONVECTION
C  M - NUMBER OF MODEL POINTS
C  [COMMON] SDEL(2,...) - DEL (=DLNT/DLNP)
C
C  OUTPUT VARIABLES :
C
C  NEW RUN OF HCOMP(1,...) AND HCOMP(2,...).
C
C  CONVERT MODEL QUANTITIES TO BAHCALL AND LOEB UNITS; LOCATE
C  BOUNDARIES OF CONVECTIVE CORE AND ENVELOPE IF APPLICABLE.
C  COMPUTE THE DIFFUSION COEFFICIENTS (COD1 AND COD2) AND THEIR
C  DERIVATIVES WITH RESPECT TO X (QCOD1X AND QCOD2X).
C

      CALL SETUP_GRSETT(DT,HQPR,HR,HD,HS1,HT,LC,M,STOT,COD1,COD2,
     *            HCOMP,HRU,HTU,IBEGIN,IEND,LALLCZ,QCOD1X,QCOD2X)
C
C SKIP SETTLING FOR FULLY CONVECTIVE MODELS.
      IF(LALLCZ) RETURN
C  TRANSFORM TO AN EQUALLY SPACED GRID IN RADIUS.
C  NOTE : PREFIX E ALONE=VARIABLE AT EQUALLY SPACED GRID POINTS.
C         PREFIX E + SUFFIX _H= VARIABLE AT MIDPOINT BETWEEN EQUALLY
C         SPACED GRID POINTS.(BOTH ARE NEEDED FOR THE DIFFUSION TECHNIQUE).
C
      CALL MODEL_TO_EQUAL(COD1,COD2,HCOMP,HQPR,HRU,HS1,HTU,
     *                    IBEGIN,IEND,M,QCOD1X,QCOD2X,DR,
     *                    ECOD1,ECOD1_H,ECOD2_H,EM,EM_H,
     *                    EQCOD1X_H,EQCOD2X_H,ER,EX,EX_H,NPT)
C
C STORE ORIGINAL RUN OF HYDROGEN MASS FRACTION IN VECTOR EX_ORIG.
C THE CHANGE IN HYDROGEN (EX - EX_ORIG) IS INTERPOLATED BACK TO THE
C ORIGINAL GRID AT THE END OF THE ROUTINE; THE CHANGE IN ABUNDANCE
C (RATHER THAN THE NEW RUN OF ABUNDANCE) IS USED TO MINIMIZE ERRORS
C ARISING FROM THE INTERPOLATION.
      DO 5 I = 1,NPT
         EX_ORIG(I) = EX(I)
    5 CONTINUE
C MHP 3/94 METAL DIFFUSION
      IF(LDIFZ)THEN
         DO I = 1,NPT
            EZ_ORIG(I) = EZ(I)
         END DO
      ENDIF
C  FIRST STEP OF TWO STEP LAX-WENDROFF METHOD.   COMPUTE NEW X'S AT ZONE
C  MIDPOINTS USING THE LAX SCHEME :
C X(N+1/2,J+1/2)=1/2(X(N,J+1/2)-1/2(DT/DR)(COD1(N,J+1)-COD1(N,J))
C WHERE N IS THE TIME VARIABLE, J IS THE SPATIAL ONE, AND COD1 IS THE
C DIFFUSION COEFFICIENT.
C
C SOLVE FOR NEW ABUNDANCES AT THE ZONE MIDPOINTS USING THE ABOVE D.C.
C WITH LDOLI = FALSE, SIGNIFYING THAT LAX_WENDROF SHOULD DIFFUSE Z.
C
      LDOLI = .FALSE.
      CALL LAX_WENDROF1(DT,ECOD1,EM,NPT,STOT,EX_H,LDOLI)
C
C NOW COMPUTE NEW DIFFUSION COEFFICIENTS AT THE ZONE MIDPOINTS USING THE
C PROVISIONAL SOLUTION FOR X AT THE ZONE MIDPOINTS.
C
C GET NEW DIFFUSION COEFFICIENTS.
C ALSO DEFINE VECTOR EX_P, WHICH IS THE HYDROGEN ABUNDANCE AT THE
C END OF THE PREVIOUS ITERATION.
C
      DO 10 I=1,NPT-1
         ECOD1_H(I)=ECOD1_H(I)+EX_H(I)*EQCOD1X_H(I)
         EX_P(I) = EX_ORIG(I)
 10   CONTINUE
      EX_P(NPT) = EX_ORIG(NPT)
C MHP 3/94 METAL DIFFUSION
      IF(LDIFZ)THEN
         DO I=1,NPT-1
            ECOD1Z_H(I)=ECOD1Z_H(I)+EZ_H(I)*EQCOD1Z_H(I)
            EZ_P(I) = EZ_ORIG(I)
         END DO
         EZ_P(NPT) = EZ_ORIG(NPT)
      ENDIF
C
C USING THE NEW COEFFICIENTS, SOLVE FOR THE NEW RUN OF HYDROGEN ABUNDANCES.
C NOTE : THE SR ACTUALLY RETURNS THE *CHANGE* IN THE ABUNDANCE AS A FUNCTION
C OF RADIUS, WHICH IS APPLIED TO THE ORIGINAL RUN OF X, RATHER THAN
C COMPUTING A NEW RUN OF ABUNDANCE AND TRANSFORMING IT BACK.  THIS IS DONE
C TO MINIMIZE ERRORS FROM THE INTERPOLATION.
C
      CALL LAX_WENDROF2(DT,ECOD1_H,EM_H,EX,NPT,STOT,LDOLI)
C
C  NOW IMPLICITLY SOLVE FOR THE SECOND TERM (INVOLVING THE SECOND
C  DERIVATIVE OF THE COMPOSITION GRADIENT).
C  EX_PRIME IS THE HYDROGEN ABUNDANCE ONE WOULD HAVE IN THE ABSENCE OF
C  THE SECOND TERM IN THE DIFFUSION EQUATION.
      DO 15 I = 1,NPT
         EX_PRIME(I) = EX(I)
 15   CONTINUE
C  ALPHA IS THE NUMERICAL FACTOR IN FRONT OF THE DIFFUSION COEFFICIENTS.
      FAC = C4PI*DT/DR
      ALPHA(1) = FAC/EM_H(1)
      DO 20 I = 2,NPT-1
         ALPHA(I) = FAC/(EM_H(I)-EM_H(I-1))
 20   CONTINUE
      ALPHA(NPT) = FAC/(STOT-EM_H(NPT-1))
C  START ITERATION LOOP FOR THE NEW RUN OF HYDROGEN.
      DO 100 ITER=1,NITER_GS
C  FIND CHANGE IN X AT THE ZONE MIDPOINTS, GIVEN CHANGE IN X AT
C  THE ZONE CENTERS.
         DO 30 I = 2,NPT
            EX_H(I) = 0.5D0*(EX(I)+EX(I-1)-EX_P(I)-EX_P(I-1))
 30      CONTINUE
C  STORE CURRENT RUN OF HYDROGEN ABUNDANCES IN VECTOR EX_P. THE ITERATION
C  LOOP IS COMPLETED ONCE EX - EX_P IS EVERYWHERE LESS THAN THE TOLERANCE
C  GRTOL.
         DO 40 I = 1,NPT
            EX_P(I) = EX(I)
 40      CONTINUE
C  GET NEW DIFFUSION COEFFICIENTS, TAKING INTO ACCOUNT THE CHANGE IN X
C  FROM THE PREVIOUS ITERATION.
C
         CALL GET_IMP_DIFFCO(ALPHA,ECOD2_H,EX_H,EQCOD2X_H,A,B,C,NPT)
C
C  SOLVE THE TRIDIAGONAL MATRIX SYSTEM FOR THE NEW RUN OF X.
C
         CALL TRIDIAG_GS(A,B,C,EX_PRIME,NPT,EX)
C
C  CHECK TO SEE IF THE CORRECTIONS TO THE HYDROGEN ABUNDANCE ARE SMALL
C  ENOUGH TO EXIT.
         DXMAX = 0.0D0
         IMAX = 0
         DO 50 I = 1,NPT
            DX = EX(I)-EX_P(I)
            IF(DX.GT.DXMAX)THEN
               DXMAX = DX
               IMAX = I
            ENDIF
 50      CONTINUE
c         WRITE(IOWR,90)ITER,DXMAX,IMAX
         WRITE(ISHORT,90)ITER,DXMAX,IMAX
 90      FORMAT(1X,'ITERATION ',I3,' DXMAX ',1PE10.2,' IMAX ',I4)
C  EXIT ITERATION LOOP IF SYSTEM HAS CONVERGED.
         IF(DXMAX.LT.GRTOL)GOTO 120
 100  CONTINUE
      WRITE(IOWR,110)GRTOL,NITER_GS,DXMAX,IMAX
      WRITE(ISHORT,110)GRTOL,NITER_GS,DXMAX,IMAX
 110  FORMAT(1X,'GRSETT FAILED TO CONVERGE TO WITHIN ',1PE9.3,' IN ',I3,
     *     'ITERATIONS'/1X,'LAST ITERATION CHANGE IN X ',1PE9.3,
     *     ' IN EQUALLY SPACED SHELL ',I5)
 120  CONTINUE
C  FIND RUN OF CHANGES IN X.
      DO 130 I = 1,NPT
         EX(I) = EX(I)-EX_ORIG(I)
 130  CONTINUE
C MHP 3/94 ADDED METAL DIFFUSION
      IF(LDIFZ)THEN
         ZZ1=EZ(1)-EZ_ORIG(1)
         ZZ2=EZ(NPT)-EZ_ORIG(NPT)
         DO I = 1,NPT
            EZ(I) = EZ(I) - EZ_ORIG(I)
         END DO
      ENDIF
C TRANSFORM BACK TO ORIGINAL MODEL GRID; UPDATE HELIUM ARRAY USING
C X+Y+Z=1.  PRINT DIAGNOSTIC OUTPUT.

      CALL EQUAL_TO_MODEL(DT,ER,EX,IBEGIN,IEND,NPT,HCOMP,HQPR,
     *     HRU,HS1,HTU,M,STOT)

      RETURN
      END
