C MHP 6/2014
C Subroutine to remap new, more intuitively named, namelist parameters
C onto existing code parameters
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
C REMAP
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
      SUBROUTINE REMAP
      use params, only : nt, ng, nta, nga, nts, nps, json
      use settings, only : ATIME  ! /CTLIM/
      use settings, only : DTWIND  ! /CT2/
      use settings, only : LPTIME  ! /CT3/
      use settings, only : HPTTOL  ! /CTOL/
      use settings, only : DTDIF  ! /DIFUS/

      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
      IMPLICIT INTEGER*4(I,J,K,M,N)
C MHP 8/96 CROSS SECTIONS PUT IN COMMON BLOCK
C MHP 6/14 DERIVATIVES ADDED
      COMMON/CROSS/SSTANDARD(17),QS0E(8),QQS0EE(8),FO16,FC12,LNEWNUC
      COMMON/NEWCROSS/S0_1_1,S0_3_3,S0_3_4,S0_1_12,S0_1_13,S0_1_14,
     *  S0_1_16,S0_PEP,S0_1_BE7E,S0_1_BE7P,S0_HEP,S0_1_15_C12ALP,
     *  S0_1_15_O16,S0P_1_1,S0P_3_3,S0P_3_4,S0P_1_12,S0P_1_13,S0P_1_14,
     *  S0P_1_16,S0PP_1_12,S0PP_1_13,S0PP_1_16,S0P_1_BE7P,S0PP_1_BE7P
C 10/14 MHP NEW PARAMETERS - REPLACING DTDIF,DTWIND, HPTTOL & ATIME VECTORS
      COMMON/NEWPARAM/FLAG_DX,FLAG_DW,FLAG_DZ,LSTRUCT_TIME,
     * TIME_CORE_MIN,TIME_DL,TIME_DP,TIME_DR,TIME_DT,TIME_DW_GLOBAL,
     * TIME_DW_MIX,TIME_DX_CORE_FRAC,TIME_DX_CORE_TOT,TIME_DX_SHELL,
     * TIME_DX_TOTAL,TIME_DY_CORE_FRAC,TIME_DY_CORE_TOT,TIME_DY_SHELL,
     * TIME_DY_TOTAL,TOL_CZBASE_FINE_WIDTH,TOL_DL_MAX,TOL_DM_MAX,
     * TOL_DM_MIN,TOL_DP_CORE_MAX,TOL_DP_CZBASE_MAX,TOL_DP_ENV_MAX,
     * TOL_DX_MAX,TOL_DZ_MAX,TIME_MAX_DT_FAC,LNEWVARS
      SAVE
      DATA S0_1_1_REF,S0_3_3_REF,S0_3_4_REF,S0_1_12_REF,S0_1_13_REF/
     *     4.07D-22,5.15D3,5.4D-1,1.45D0,5.5D0/
C NOTE: PEP IS THE PROPORTIONALITY CONSTANT RELATIVE TO PP
C NOTE: BE7+E- IS THE PROPORTIONALITY CONSTANT IN THE LINEAR TERM
C THE CODE USES T9, NOT T6, SO ANY EXPRESSION IN TERMS OF T/10^6 K
C NEEDS TO BE DIVIDED BY 1000^0.5 (FOR BOTH PEP AND BE7+E-)
      DATA S0_1_14_REF,S0_1_16_REF,S0_PEP_REF,S0_1_BE7E_REF/
     *     3.32D0,9.4E0,3.4848D-6,1.752D-10/
      DATA S0_1_BE7P_REF,S0_HEP_REF,S0_1_15_C12ALP_REF,S0_1_15_O16_REF/
     *     0.0243D0,8.0D-20,6.75D4,6.4D1/
C REFERENCE ADELBERGER ET AL. 1998 CROSS SECTIONS - USED IN HARD-CODED
C FIRST AND SECOND DERIVATIVE TERMS (EXPRESSED AS S'/S AND S''/S)
C UNITS ARE KeV b
      DATA S0_1_1_A98,S0_3_3_A98,S0_3_4_A98,S0_1_12_A98,S0_1_13_A98/
     *     4.00D-22,5.4D3,5.3D-1,1.34D0,7.6D0/
      DATA S0_1_14_A98,S0_1_16_A98,S0_PEP_A98,S0_1_BE7E_A98/
     *     3.5D0,9.4D0,3.5734D-6,1.77088D-10/
      DATA S0_1_BE7P_A98,S0_HEP_A98,S0_1_15_C12ALP_A98,S0_1_15_O16_A98/
     *     0.019D0,2.3D-20,6.75D4,6.4D1/
C REFERENCE FIRST DERRIVATIVES OF CROSS-SECTIONS (ADELBERGER ET AL. 1998)
C UNITS ARE b
      DATA QS0E_1_1_A98,QS0E_3_3_A98,QS0E_3_4_A98,QS0E_1_12_A98/
     *     4.48D-24,-4.1D0,-3.0D-4,2.6D-3/
      DATA QS0E_1_13_A98,QS0E_1_14_A98,QS0E_1_16_A98,QS0E_1_BE7P_A98/
     *     -7.8D-3,-1.28D-2,-2.4D-2,-1.33D-5/
C REFERENCE SECOND DERIVATIVES OF CROSS SECTIONS (ADELBERGER ET AL. 1998)
      DATA QQS0EE_1_12_A98,QQS0EE_1_13_A98,QQS0EE_1_16_A98,
     *     QQS0EE_1_BE7P_A98/
     *     8.3D-5,7.3D-4,5.7D-5,7.22D-8/
C The code explicitly treats non-equilibrium C12,C13,N14,O16.
C N15 burning is assumed to immediately follow N14+p, with the
C branching ratio between C12+Alpha and O16+Gamma calculated using
C the relative S0 for the two.  To change the branching ratio, change
C S0_1_15_C12ALP and S0_1_15_O16.  O17 proton capture is assumed to
C immediately follow O16 proton capture, producing N14.
C He-burning reactions triple-alpha,C12+He4,C13+He4,N14+He4 are tracked
C in the code, using the Caughlin&Fowler(1988) cross-sections.  As resonances
C are important for these reactions, a simple scaling by S0 is not sufficient,
C and updates should instead use different functional forms (e.g. NACRE II).
C IF THE LNEWNUC FLAG IS SET TRUE THE SSTANDARD VECTOR IS NORMALIZED TO UNITY
C AND THE INDIVIDUAL CROSS-SECTION VALUES AND THEIR DERIVATIVES ARE USED INSTEAD.
      DO I = 1,8
         QS0E(I) = 1.0D0
         QQS0EE(I) = 1.0D0
      END DO
      FC12 = 1.0D0
      FO16 = 1.0D0
C      WRITE(*,911)(QS0E(I),I=1,8),(QQS0EE(I),I=1,8),
C     * (SSTANDARD(I),I=1,17),LNEWNUC
C 911  FORMAT(8E12.3/8E12.3/8E12.3/9E12.3/L5)
      IF(LNEWNUC)THEN
         DO I = 1,17
            SSTANDARD(I) = 1.0D0
         END DO
C The energy generation subroutine engeb has a vector, SSTANDARD,
C which is the ratio of the desired S0 to that of Bahcall & Ulrich (1988).
C If this option is true, the namelist SSTANDARD vector is replaced
C by explicit cross-sections for individual reactions, and the implied
C Sstandard vector is derived here.  The first and second derivatives
C of the reactions are permitted to be separately modified, unlike in the
C original version of engeb.  In this case the inputs are the ratios
C S'/S0 and S''/S0, relative to the Solar Fusion I (Adelberger et al. 1998) ratios.
         SSTANDARD(1) = S0_1_1/S0_1_1_REF
         SSTANDARD(2) = S0_3_3/S0_3_3_REF
         SSTANDARD(3) = S0_3_4/S0_3_4_REF
         SSTANDARD(4) = S0_1_12/S0_1_12_REF
         SSTANDARD(5) = S0_1_13/S0_1_13_REF
         SSTANDARD(6) = S0_1_14/S0_1_14_REF
         SSTANDARD(7) = S0_1_16/S0_1_16_REF
C      SSTANDARD(8) = S0_4_13/S0_4_13_REF resonant; not fit by simple S0
C      SSTANDARD(9) = S0_4_16/S0_4_16_REF not used
C      SSTANDARD(10) = S0_4_12/S0_4_12_REF resonant; not fit by simple S0
C      SSTANDARD(11) = S0_4_14/S0_4_14_REF resonant; not fit by simple S0
C      SSTANDARD(12) = S0_3A/S0_3A_REF resonant; not fit by simple S0
C      SSTANDARD(13) = S0_12_12/S0_12_12_REF not used
         SSTANDARD(14) = S0_PEP/S0_PEP_REF
         SSTANDARD(15) = S0_1_BE7E/S0_1_BE7E_REF
         SSTANDARD(16) = S0_1_BE7P/S0_1_BE7P_REF
         SSTANDARD(17) = S0_HEP/S0_HEP_REF
C ABILITY TO CHANGE THE HARD-CODED BRANCHING RATIOS FOR THE OUTCOME OF N15+P
         FC12 = S0_1_15_C12ALP/S0_1_15_C12ALP_REF
         FO16 = S0_1_15_O16/S0_1_15_O16_REF
C NUCLEAR REACTION DERIVATIVES ARE USED IN THE VECTORS Q2-Q5 IN ENGEB AND NRATES.
C THE Q2 AND Q3 FACTORS ARE DEFINED PROPORTIONAL TO S'/S (REFERENCE: SOLAR FUSION I IN 1998)
C THE Q4 AND Q5 FACTORS ARE DEFINTED PROPORTIONAL TO S''/S (SAME REFERENCE)
C FIRST DERIVATIVE TERMS - TO BE USED TO MULTIPLY Q2 AND Q3 TERMS IN ENGEB
C MHP 4/25 FIXED TYPOS AND TRAPPED OUT POTENTIAL DIVIDE BY ZERO ERRORS
         IF(S0_1_1.GT.0.0D0)THEN
            QS0E(1) = (S0P_1_1/S0_1_1)/(QS0E_1_1_A98/S0_1_1_A98)
         ELSE
            QS0E(1) = 0.0D0
         ENDIF
         IF(S0_3_3.GT.0.0D0)THEN
            QS0E(2) = (S0P_3_3/S0_3_3)/(QS0E_3_3_A98/S0_1_1_A98)
         ELSE
            QS0E(2) = 0.0D0
         ENDIF
         IF(S0_3_4.GT.0.0D0)THEN
            QS0E(3) = (S0P_3_4/S0_3_4)/(QS0E_3_4_A98/S0_1_1_A98)
         ELSE
            QS0E(3) = 0.0D0
         ENDIF
         IF(S0_1_12.GT.0.0D0)THEN
            QS0E(4) = (S0P_1_12/S0_1_12)/(QS0E_1_12_A98/S0_1_1_A98)
         ELSE
            QS0E(4) = 0.0D0
         ENDIF
         IF(S0_1_13.GT.0.0D0)THEN
            QS0E(5) = (S0P_1_13/S0_1_13)/(QS0E_1_13_A98/S0_1_1_A98)
         ELSE
            QS0E(5) = 0.0D0
         ENDIF
         IF(S0_1_14.GT.0.0D0)THEN
            QS0E(6) = (S0P_1_14/S0_1_14)/(QS0E_1_14_A98/S0_1_1_A98)
         ELSE
            QS0E(6) = 0.0D0
         ENDIF
         IF(S0_1_16.GT.0.0D0)THEN
            QS0E(7) = (S0P_1_16/S0_1_16)/(QS0E_1_16_A98/S0_1_1_A98)
         ELSE
            QS0E(7) = 0.0D0
         ENDIF
c         QS0E(8)=(S0P_1_BE7P/S0_1_BE7P)/(QS0E_1_BE7P_A98/S0_1_BE7P__A98)
         IF(S0_1_BE7P.GT.0.0D0)THEN
            QS0E(8)=(S0P_1_BE7P/S0_1_BE7P)/(QS0E_1_BE7P_A98/S0_1_BE7P_A98)
         ELSE
            QS0E(8) = 0.0D0
         ENDIF
C SECOND DERIVATIVE TERMS - TO BE USED TO MULTIPLY Q4 AND Q5 TERMS IN ENGEB
C         QQS0EE(1) = (S0PP_1_1/S0_1_1)/(QQS0EE_1_1_A98/S0_1_1_A98) ZEROED OUT IN 2003 VERSION
C         QQS0EE(2) = (S0PP_3_3/S0_3_3)/(QQS0EE_3_3_A98/S0_3_3_A98) ZEROED OUT IN 2003 VERSION
C         QQS0EE(3) = (S0PP_3_4/S0_3_4)/(QQS0EE_3_4_A98/S0_3_4_A98) ZEROED OUT IN 2003 VERSION
         IF(S0_1_12.GT.0.0D0)THEN
            QQS0EE(4) = (S0PP_1_12/S0_1_12)/(QQS0EE_1_12_A98/S0_1_1_A98)
         ELSE
            QQS0EE(4)=0.0D0
         ENDIF
         IF(S0_1_13.GT.0.0D0)THEN
            QQS0EE(5) = (S0PP_1_13/S0_1_13)/(QQS0EE_1_13_A98/S0_1_1_A98)
         ELSE
            QQS0EE(5)=0.0D0
         ENDIF
C         QQS0EE(6) = (S0PP_1_14/S0_1_14)/(QQS0EE_1_14_A98/S0_1_14_A98) ZEROED OUT IN 2003 VERSION
         IF(S0_1_16.GT.0.0D0)THEN
            QQS0EE(7) = (S0PP_1_16/S0_1_16)/(QQS0EE_1_16_A98/S0_1_1_A98)
         ELSE
            QQS0EE(7)=0.0D0
         ENDIF
         IF(S0_1_BE7P.GT.0.0D0)THEN
            QQS0EE(8)=(S0PP_1_BE7P/S0_1_BE7P)/
     *             (QQS0EE_1_BE7P_A98/S0_1_BE7P_A98)
         ELSE
            QQS0EE(8)=0.0D0
         ENDIF
      ENDIF
C OPTION TO OVERWRITE SPATIAL AND TEMPORAL TOLERANCES WITH MORE INTUITIVE VARIABLE NAMES.
C NOTE: THIS OVERWRITES THE HPTTOL AND ATIME VECTORS.
      IF(LNEWVARS)THEN
C MINIMUM LOG MASS SPACING BETWEEN SHELLS
         HPTTOL(1) = TOL_DM_MIN
C MAXIMUM LOG MASS SPACING BETWEEN SHELLS
         HPTTOL(2) = TOL_DM_MAX
C MAXIMUM L/LSURF SPACING BETWEEN SHELLS
         HPTTOL(9) = TOL_DL_MAX
C MAXIMUM LOG P SPACING BETWEEN SHELLS, RADIATIVE INTERIOR
         HPTTOL(11) = TOL_DP_CORE_MAX
C MAXIMUM LOG P SPACING BETWEEN SHELLS, CONVECTIVE ENVELOPE
         HPTTOL(8) = TOL_DP_ENV_MAX
C MAXIMUM LOG P SPACING BETWEEN SHELLS, NEAR CZ BASE
         HPTTOL(10) = TOL_DP_CZBASE_MAX
C WIDTH (IN LOG P) OF FINELY ZONED REGION NEAR THE CZ BASE
         HPTTOL(7) = TOL_CZBASE_FINE_WIDTH
C MAXIMUM X SPACING BETWEEN SHELLS (USUALLY DISABLED)
         HPTTOL(5) = TOL_DX_MAX
C MAXIMUM Z SPACING BETWEEN SHELLS (USUALLY DISABLED)
         HPTTOL(6) = TOL_DZ_MAX
C X DIFFERENCE BETWEEN SHELLS REQUIRED TO FLAG (AVOID NUMERICAL DIFFUSION)
         HPTTOL(3) = FLAG_DX
C Z DIFFERENCE BETWEEN SHELLS REQUIRED TO FLAG (AVOID NUMERICAL DIFFUSION)
         HPTTOL(4) = FLAG_DZ
C MAXIMUM LOG OMEGA SPACING BETWEEN SHELLS (ROTATING MODELS ONLY)
         HPTTOL(12) = FLAG_DW
C MINIMUM CENTRAL ABUNDANCE TO USE CORE BURNING DT CRITERION
         ATIME(1) = TIME_CORE_MIN
C MAX PERMITTED ABSOLUTE DELTA X BURNED IN CORE IN TIMESTEP
         ATIME(2) = TIME_DX_CORE_TOT
C MAX PERMITTED FRACTION OF X BURNED IN CORE IN TIMESTEP
         ATIME(3) = TIME_DX_CORE_FRAC
C MAX PERMITTED SOLAR MASSES OF X BURNED IN TIMESTEP
         ATIME(6) = TIME_DX_TOTAL
C MAX PERMITTED FRACTION OF X BURNED IN SHELL IN TIMESTEP
         ATIME(7) = TIME_DX_SHELL
C MAX PERMITTED ABSOLUTE DELTA Y BURNED IN CORE IN TIMESTEP
         ATIME(4) = TIME_DY_CORE_TOT
C MAX PERMITTED FRACTION OF Y BURNED IN CORE IN TIMESTEP
         ATIME(5) = TIME_DY_CORE_FRAC
C MAX PERMITTED FRACTION OF Y BURNED IN SHELL IN TIMESTEP
         ATIME(12) = TIME_DY_SHELL
C MAX PERMITTED SOLAR MASSES OF Y BURNED IN SHELL IN TIMESTEP
         ATIME(14) = TIME_DY_TOTAL
C MAX PERMITTED CHANGES IN T, P, R, L AT ANY GIVEN SHELL IN TIMESTEP
         ATIME(8) = TIME_DT
         ATIME(9) = TIME_DP
         ATIME(10) = TIME_DR
         ATIME(11) = TIME_DL
C MASTER FLAG THAT USES/DOES NOT USE ATIME(8)-(11)
C NOTE: THIS IS USED ONLY IN THE PRE-MS AND DISABLED FOR MS STARS AUTOMATICALLY.
         LPTIME = LSTRUCT_TIME
C MAX PERMITTED CHANGE IN OMEGA PER GLOBAL TIMESTEP
         DTWIND = TIME_DW_GLOBAL
C THE CODE CAN MIX IN A SERIES OF SMALLER TIMESTEPS; THIS IS
C THE MAX PERMITTED CHANGE IN OMEGA IN A SMALL, ROTATIONAL MIXING STEP
         DTDIF = TIME_DW_MIX
C THE TIMESTEP IS NOT PERMITTED TO CHANGE FROM ONE MODEL TO THE NEXT BY
C MORE THAN THIS SCALE FACTOR
         ATIME(13) = TIME_MAX_DT_FAC
      ENDIF
      RETURN
      END

