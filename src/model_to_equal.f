C $$$$$$
      SUBROUTINE MODEL_TO_EQUAL(COD1,COD2,HCOMP,HQPR,HRU,HS1,HTU,
     *                          IBEGIN,IEND,M,QCOD1X,QCOD2X,DR,
     *                          ECOD1,ECOD1_H,ECOD2_H,EM,EM_H,
     *                          EQCOD1X_H,EQCOD2X_H,ER,EX,EX_H,NPT)
      use params, only : json
      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
C MHP 3/94 ADDED METAL DIFFUSION.
      COMMON/GRAVS3/FGRY,FGRZ,LTHOUL,LDIFZ
      COMMON/GRAVSZ/COD1Z(JSON),COD2Z(JSON),QCOD1Z(JSON),QCOD2Z(JSON)
      COMMON/GRAVEZ/ECOD1Z(JSON),ECOD1Z_H(JSON),ECOD2Z_H(JSON),
     *              EQCOD1Z_H(JSON),EQCOD2Z_H(JSON),EZ(JSON),
     *              EZ_H(JSON)
      DIMENSION COD1(JSON),COD2(JSON),HCOMP(15,JSON),HQPR(JSON),
     *   HRU(JSON),HS1(JSON),HTU(JSON),QCOD1X(JSON),QCOD2X(JSON),
     *   ECOD1(JSON),ECOD1_H(JSON),ECOD2_H(JSON),EM(JSON),
     *   EM_H(JSON),EQCOD1X_H(JSON),EQCOD2X_H(JSON),ER(JSON),EX(JSON),
     *   EX_H(JSON),FACINTERP(4),FACDERIV(4),TABLER(4)
      SAVE
C  FIND MINIMUM MODEL POINT SPACING IN RADIUS.

      DRTOT = HRU(IEND)-HRU(IBEGIN)
      DRMIN = DRTOT
      DO 7 I = IBEGIN+1,IEND
         DRMIN=MIN(DRMIN,HRU(I)-HRU(I-1))
    7 CONTINUE
C  ASSIGN THE MINIMUM NUMBER OF EQUALLY SPACED GRID POINTS SUCH THAT
C  DR <= DRMIN.
      NPT=INT(DRTOT/DRMIN)
      IF(MOD(DRTOT,DRMIN).NE.0.0D0)NPT=NPT+1
C JVS add additional trap to deal with models with NPT=1
	IF (NPT .EQ. 1) NPT=NPT+1
C  ENSURE THAT NUMBER OF POINTS DOES NOT EXCEED JSON.

      NPT=MIN(NPT,JSON)
      DR = DRTOT/DFLOAT(NPT-1)

C  SET UP VECTOR OF EQUALLY SPACED RADII AT ZONE MIDPOINTS.
      ER(1)=HRU(IBEGIN)+0.5D0*DR
C JVS added logic trap (IF statement)
	IF (NPT .EQ. 2) THEN
		ER(2)=ER(1)+DR
	ELSE
      	DO 10 I = 2,NPT-1 ! old piece
		IF(I-1 .EQ. 0) PRINT*, 'mte line 47'
         	ER(I)=ER(I-1)+DR  ! old piece
  10 		CONTINUE          ! old piece
	ENDIF

C  NOW USE 4-POINT LAGRANGIAN INTERPOLATION TO FIND RUN OF VARIABLES
C  AT EQUALLY SPACED ZONE MIDPOINTS.
C
C  FIRST POINT : LINEAR INTERPOLATION BETWEEN STARTING POINT AND 2ND PT.
      DO 15 IU=2,NPT
         IF(HRU(IU).GE.ER(1))GOTO 17
   15 CONTINUE
      IU=NPT
   17 CONTINUE
      FX=(ER(1)-HRU(IU-1))/(HRU(IU)-HRU(IU-1))
      EM_H(1) = HS1(IU-1)+FX*(HS1(IU)-HS1(IU-1))
      ECOD1_H(1)=COD1(IU-1)+FX*(COD1(IU)-COD1(IU-1))
      ECOD2_H(1)=COD2(IU-1)+FX*(COD2(IU)-COD2(IU-1))
      EQCOD1X_H(1)=QCOD1X(IU-1)+FX*(QCOD1X(IU)-QCOD1X(IU-1))
      EQCOD2X_H(1)=QCOD2X(IU-1)+FX*(QCOD2X(IU)-QCOD2X(IU-1))
      EX_H(1) = HCOMP(1,IU-1)+FX*(HCOMP(1,IU)-HCOMP(1,IU-1))
      IF(LDIFZ)THEN
         ECOD1Z_H(1)=COD1Z(IU-1)+FX*(COD1Z(IU)-COD1Z(IU-1))
         ECOD2Z_H(1)=COD2Z(IU-1)+FX*(COD2Z(IU)-COD2Z(IU-1))
         EQCOD1Z_H(1)=QCOD1Z(IU-1)+FX*(QCOD1Z(IU)-QCOD1Z(IU-1))
         EQCOD2Z_H(1)=QCOD2Z(IU-1)+FX*(QCOD2Z(IU)-QCOD2Z(IU-1))
         EZ_H(1) = HCOMP(8,IU-1)+FX*(HCOMP(8,IU)-HCOMP(8,IU-1))
      ENDIF
C  CENTER DERIVATIVE.
      DR1=ER(1)-HRU(IU-1)
      DR2=HRU(IU)-ER(1)
      IF(DR2.GT.DR1)THEN
         FAC1=1.0D0
         FAC2=DR1/DR2
         DELR=2.0D0*DR1
      ELSE IF(DR1.GT.DR2)THEN
         FAC1=DR2/DR1
         FAC2=1.0D0
         DELR=2.0D0*DR2
      ELSE
         FAC1=1.0D0
         FAC2=1.0D0
         DELR=DR1+DR2
      ENDIF
C  FOR OTHER POINTS: FIRST FIND 4 NEAREST (IN RADIUS) MODEL POINTS
C  AND THEN FIND LAGRANGIAN INTERPOLATION FACTORS. APPLY THEM TO FIND
C  MODEL QUANTITIES AT THE EQUALLY SPACED GRID POINTS.
C  JMIN IS THE UPPERMOST MODEL POINT ABOVE THE PREVIOUS EQUALLY SPACED
C  GRID POINT (IN RADIUS).
      JMIN=IBEGIN+1
      DO 50 I=2,NPT-1
         DO 20 J = JMIN,IEND
C  FIND 4 MODEL POINTS CLOSEST TO THE EQUALLY SPACED GRID POINT.
            IF(HRU(J).GE.ER(I))THEN
C  ENSURE THAT FIRST INTERPOLATION POINT NO LESS THAN FIRST MODEL POINT.
               K0 = MAX(J-2,1)
C  ENSURE THAT LAST INTERPOLATION POINT NO GREATER THAN LAST MODEL POINT.
               K0 = MIN(K0,M-3)
               JMIN=J
               GOTO 30
            ENDIF
   20    CONTINUE
         K0 = M-3
         JMIN=M
   30    CONTINUE
         DO 40 K=1,4
            TABLER(K)=HRU(K0+K-1)
   40    CONTINUE
         GRIDRAD=ER(I)
C  FIND 4 POINT LAGRANGIAN INTERPOLATION FACTORS.
C  FACINTERP=INTERPOLATION FACTORS FOR POINT GRIDRAD GIVEN THE 4 TABLE
C  RADII IN TABLER; FACDERIV=SAME FOR DERIVATIVES AT POINT GRIDRAD.
         CALL INTERP(TABLER,FACINTERP,FACDERIV,GRIDRAD)
C  PERFORM 4 POINT LAGRANGIAN INTERPOLATION FOR DESIRED QUANTITIES:
C  MASS WITHIN THE RADIUS ER
         EM_H(I) = FACINTERP(1)*HS1(K0)+FACINTERP(2)*HS1(K0+1)+
     *             FACINTERP(3)*HS1(K0+2)+FACINTERP(4)*HS1(K0+3)
C  D1
         ECOD1_H(I) = FACINTERP(1)*COD1(K0)+FACINTERP(2)*COD1(K0+1)+
     *             FACINTERP(3)*COD1(K0+2)+FACINTERP(4)*COD1(K0+3)
C  D2
         ECOD2_H(I) = FACINTERP(1)*COD2(K0)+FACINTERP(2)*COD2(K0+1)+
     *             FACINTERP(3)*COD2(K0+2)+FACINTERP(4)*COD2(K0+3)
C  DERIVATIVE OF D1 WRT X
         EQCOD1X_H(I)=FACINTERP(1)*QCOD1X(K0)+FACINTERP(2)*QCOD1X(K0+1)
     *             +FACINTERP(3)*QCOD1X(K0+2)+FACINTERP(4)*QCOD1X(K0+3)
C  DERIVATIVE OF D2 WRT X
         EQCOD2X_H(I)=FACINTERP(1)*QCOD2X(K0)+FACINTERP(2)*QCOD2X(K0+1)
     *             +FACINTERP(3)*QCOD2X(K0+2)+FACINTERP(4)*QCOD2X(K0+3)
C  MASS FRACTION OF HYDROGEN
         EX_H(I)=FACINTERP(1)*HCOMP(1,K0)+FACINTERP(2)*HCOMP(1,K0+1)+
     *           FACINTERP(3)*HCOMP(1,K0+2)+FACINTERP(4)*HCOMP(1,K0+3)
         IF(LDIFZ)THEN
C  METAL DIFFUSION-TREATED AS FULLY IONIZED IRON.
C  D1
         ECOD1Z_H(I)=FACINTERP(1)*COD1Z(K0)+FACINTERP(2)*COD1Z(K0+1)+
     *             FACINTERP(3)*COD1Z(K0+2)+FACINTERP(4)*COD1Z(K0+3)
C  D2
         ECOD2Z_H(I)=FACINTERP(1)*COD2Z(K0)+FACINTERP(2)*COD2Z(K0+1)+
     *             FACINTERP(3)*COD2Z(K0+2)+FACINTERP(4)*COD2Z(K0+3)
C  DERIVATIVE OF D1 WRT Z
         EQCOD1Z_H(I)=FACINTERP(1)*QCOD1Z(K0)+FACINTERP(2)*QCOD1Z(K0+1)
     *             +FACINTERP(3)*QCOD1Z(K0+2)+FACINTERP(4)*QCOD1Z(K0+3)
C  DERIVATIVE OF D2 WRT Z
         EQCOD2Z_H(I)=FACINTERP(1)*QCOD2Z(K0)+FACINTERP(2)*QCOD2Z(K0+1)
     *             +FACINTERP(3)*QCOD2Z(K0+2)+FACINTERP(4)*QCOD2Z(K0+3)
C  MASS FRACTION OF METALS
         EZ_H(I)=FACINTERP(1)*HCOMP(8,K0)+FACINTERP(2)*HCOMP(8,K0+1)+
     *           FACINTERP(3)*HCOMP(8,K0+2)+FACINTERP(4)*HCOMP(8,K0+3)
         ENDIF
   50 CONTINUE
C  SET UP VECTOR OF EQUALLY SPACED RADII AT ZONE CENTERS.

      ER(1)=HRU(IBEGIN)
      DO 60 I = 2,NPT
         ER(I)=ER(I-1)+DR
   60 CONTINUE


C  NOW USE 4-POINT LAGRANGIAN INTERPOLATION TO FIND RUN OF VARIABLES
C  AT EQUALLY SPACED ZONE CENTERS.
C
C  FIRST POINT : BY DEFINITION, AT STARTING POINT.
      EM(1) = HS1(IBEGIN)
      EX(1) = HCOMP(1,IBEGIN)
      ECOD1(1)=COD1(IBEGIN)
      IF(LDIFZ)THEN
         EZ(1) = HCOMP(8,IBEGIN)
         ECOD1Z(1) = COD1Z(IBEGIN)
      ENDIF
C  FOR OTHER POINTS: FIRST FIND 4 NEAREST (IN RADIUS) MODEL POINTS
C  AND THEN FIND LAGRANGIAN INTERPOLATION FACTORS. APPLY THEM TO FIND
C  MODEL QUANTITIES AT THE EQUALLY SPACED GRID POINTS.
C  JMIN IS THE UPPERMOST MODEL POINT ABOVE THE PREVIOUS EQUALLY SPACED
C  GRID POINT (IN RADIUS).
      JMIN=IBEGIN+1
      DO 70 I=2,NPT-1
         DO 80 J = JMIN,IEND
C  FIND 4 MODEL POINTS CLOSEST TO THE EQUALLY SPACED GRID POINT.
            IF(HRU(J).GE.ER(I))THEN
C  ENSURE THAT FIRST INTERPOLATION POINT NO LESS THAN FIRST MODEL POINT.
               K0 = MAX(J-2,1)
C  ENSURE THAT LAST INTERPOLATION POINT NO GREATER THAN LAST MODEL POINT.
               K0 = MIN(K0,M-3)
               JMIN=J
               GOTO 90
            ENDIF
   80    CONTINUE
         K0 = M-3
         JMIN=M
   90    CONTINUE
         DO 100 K=1,4
            TABLER(K)=HRU(K0+K-1)
  100    CONTINUE

         GRIDRAD=ER(I)

C  FIND 4 POINT LAGRANGIAN INTERPOLATION FACTORS.
C  FACINTERP=INTERPOLATION FACTORS FOR POINT GRIDRAD GIVEN THE 4 TABLE
C  RADII IN TABLER; FACDERIV=SAME FOR DERIVATIVES AT POINT GRIDRAD.
         CALL INTERP(TABLER,FACINTERP,FACDERIV,GRIDRAD)
C  PERFORM 4 POINT LAGRANGIAN INTERPOLATION FOR DESIRED QUANTITIES:
C  MASS WITHIN THE RADIUS ER
         EM(I) = FACINTERP(1)*HS1(K0)+FACINTERP(2)*HS1(K0+1)+
     *             FACINTERP(3)*HS1(K0+2)+FACINTERP(4)*HS1(K0+3)
C  D1
         ECOD1(I) = FACINTERP(1)*COD1(K0)+FACINTERP(2)*COD1(K0+1)+
     *             FACINTERP(3)*COD1(K0+2)+FACINTERP(4)*COD1(K0+3)
C  MASS FRACTION OF HYDROGEN

         EX(I)=FACINTERP(1)*HCOMP(1,K0)+FACINTERP(2)*HCOMP(1,K0+1)+
     *         FACINTERP(3)*HCOMP(1,K0+2)+FACINTERP(4)*HCOMP(1,K0+3)
C METAL DIFFUSION
         IF(LDIFZ)THEN
C  D1
         ECOD1Z(I)=FACINTERP(1)*COD1Z(K0)+FACINTERP(2)*COD1Z(K0+1)+
     *             FACINTERP(3)*COD1Z(K0+2)+FACINTERP(4)*COD1Z(K0+3)
C  MASS FRACTION OF METALS
         EZ(I)=FACINTERP(1)*HCOMP(8,K0)+FACINTERP(2)*HCOMP(8,K0+1)+
     *         FACINTERP(3)*HCOMP(8,K0+2)+FACINTERP(4)*HCOMP(8,K0+3)
         ENDIF
   70 CONTINUE
C  LAST POINT : BY DEFINITION, AT ENDING POINT.

      EM(NPT) = HS1(IEND)
      EX(NPT) = HCOMP(1,IEND)
      ECOD1(NPT)=COD1(IEND)

      IF(LDIFZ)THEN
         EZ(NPT) = HCOMP(8,IEND)
         ECOD1Z(NPT)=COD1Z(IEND)
      ENDIF
      RETURN
      END
