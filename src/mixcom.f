C $$$$$$
      SUBROUTINE MIXCOM(DT,ECOD2,EM,HS2,IBEG,IEND,LCZ,LOK,M,HCOMP,
     *           JBEG,JEND)
      PARAMETER (JSON=5000)
      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
      COMMON/EGRID/CHI(JSON),ECHI(JSON),ES1(JSON),DCHI,NTOT
      COMMON/SPLIN/XVAL(JSON),YVAL(JSON),XTAB(JSON),YTAB(JSON)
      COMMON/TRIDI/A(JSON),B(JSON),C(JSON),D(JSON),U(JSON),GAMA(JSON)
      DIMENSION ECOD2(JSON),EM(JSON),HCOMP(15,JSON),HS2(JSON),LCZ(JSON)
      DIMENSION ECOMP(JSON),ID(15)
      SAVE
C  DIFCOM CALCULATES THE DIFFUSION OF COMPOSITION DUE TO ANGULAR MOMENTUM
C  TRANSPORT.  THIS IS DONE BY TRANSFORMING TO AN EQUALLY SPACED GRID
C  WHICH WAS PREVIOUSLY DEFINED AND THEN TRANSFORMING BACK.
C
C  INPUT VARIABLES:
C  DT : DIFFUSION TIMESTEP(SEC).
C  ECOD2 : DIFFUSION COEFFICIENTS FOR COMPOSITION TRANSPORT AT THE EQUALLY
C          SPACED GRID POINTS.
C  EM : MASSES OF THE EQUALLY SPACED GRID POINTS(GM).
C     NOTE: FOR CONVECTIVE BOUNDARIES THE MASS OF THE LAST GRID POINT IS
C           THE MASS OF THE ENTIRE CONVECTION ZONE.
C  HCOMP : ARRAY OF MASS FRACTION OF ALL OF THE SPECIES AT THE ORIGINAL
C          MODEL POINTS.
C  HS2 : MASSES OF THE ORIGINAL MODEL POINTS(UNLOGGED).
C  IBEG,IEND :THE FIRST/LAST UNSTABLE POINTS IN THE REGION.
C     NOTE: FOR CONVECTIVE BOUNDARIES THESE ARE ONLY THE FIRST CONVECTIVE
C           POINTS ADJACENT TO AN UNSTABLE RADIATIVE REGION.
C  LCZ : FLAG WHICH TELLS WHICH OF THE ORIGINAL MODEL POINTS ARE
C        CONVECTIVE FOR ANGULAR MOMENTUM TRANSPORT PURPOSES(I.E. INCLUDES
C        OVERSHOOT REGIONS). LCZ=T IF CONVECTIVE.
C  M : NUMBER OF MODEL POINTS.
C
C  OUTPUT VARIABLES:
C  HCOMP IS UPDATED IN DIFCOM TO GIVE THE NEW RUN OF COMPOSITION AFTER
C  ANGULAR MOMENTUM TRANSPORT.
C
C  BEFORE THE LAST ITERATION(LOK=F),ONLY DIFFUSION OF H,HE4,HE3 CALCULATED
C  TO CALCULATE CHANGE IN MU GRADIENTS CAUSED BY DIFFUSION.
C  THIS ROUTINE WILL THEREFORE BE CALLED EITHER TO MIX THE OTHER SPECIES
C  OR JUST THE FIRST 4 DEPENDING ON LOK.
C  DETERMINE WHICH SPECIES VARY OVER THE UNSTABLE REGION.
      NSPEC = 0
      DO J = JBEG, JEND
         TEST = HCOMP(J,IBEG)
C  ABUNDANCE 2(HE4) IS DEFINED AS 1-X-Z-HE3 SO IT IS NOT SOLVED FOR.
         IF(J.NE.2)THEN
            DO I = IBEG+1,IEND
               IF(DABS(HCOMP(J,I)-TEST).GT.1.0D-14) THEN
                  NSPEC = NSPEC + 1
                  ID(NSPEC) = J
                  GOTO 20
               ENDIF
            END DO
         ENDIF
   20    CONTINUE
      END DO
      IF(NSPEC.EQ.0) GOTO 200
C  NOW SOLVE FOR DIFFUSION OF ALL SPECIES THAT VARY OVER THE
C  UNSTABLE REGION USING THE SAME DIFFUSION COEFFICIENTS.
      NTAB = IEND - IBEG + 1
C  FIND RUN OF COMPOSITION AT THE EQUALLY SPACED GRID POINTS AT THE
C  START OF THE DIFFUSION TIMESTEP.  THIS IS DONE USING AN OSCULATORY
C  SPLINE.
      DO N = 1,NSPEC
         DO I = 1,NTAB
            II = I + IBEG - 1
            XTAB(I) = CHI(I)
            YTAB(I) = HCOMP(ID(N),II)
         END DO
         CALL OSPLIN(ECHI,ECOMP,XTAB,YTAB,NTAB,NTOT)
C  SET UP DIFFUSION EQUATION ARRAYS TO SOLVE FOR COMP AT END OF TSTEP
         CALL CCOEFT(ECOD2,DCHI,DT,ECOMP,EM,NTOT)
C  SOLVE MATRIX FOR THE RUN OF COMP AT TIME N+1 AT THE NEW GRID.
         CALL CTRIDI(NTOT)
C  TRANSFORM BACK TO THE ORIGINAL GRID AND UPDATE HCOMP IN THE
C  DIFFUSED REGION. U IS THE NEW RUN OF COMPOSITION IN THE REGION AT THE
C  EQUALLY SPACED GRID POINTS.
C  FOR THE BOUNDARY POINTS IN THE MODEL,EXTRAPOLATING U PAST THE
C  LAST EQUALLY SPACED GRID POINTS CAN LEAD TO SERIOUS ERRORS.
C  THEREFORE ADD THE *CHANGE* IN COMPOSITION AT THE EQUALLY SPACED GRID
C  POINTS TO HCOMP AND DO NOT REPLACE HCOMP WITH U.
         DCOMP = 0.0D0
         DO I = 1,NTOT
            XTAB(I) = ECHI(I)
            YTAB(I) = U(I)-ECOMP(I)
            DCOMP = DCOMP + YTAB(I)*EM(I)
         END DO
         DO I = 1,NTAB
            XVAL(I) = CHI(I)
         END DO
C  USE YVAL AS DUMMY ARRAY FOR THE NEW RUN OF COMP AT THE ORIGINAL
C  POINT GRID.
         CALL OSPLIN(XVAL,YVAL,XTAB,YTAB,NTOT,NTAB)
C CHECK FOR LOWER CONVECTION ZONE
         IF(LCZ(IBEG).AND.IBEG.GT.1)THEN
            DO I = IBEG-1,1,-1
               IF(.NOT.LCZ(I))THEN
                  I0 = I + 1
                  GOTO 90
               ENDIF
            END DO
            I0 = 1
   90       CONTINUE
         ELSE
            I0 = IBEG
         ENDIF
C CHECK FOR UPPER CONVECTION ZONE.
         IF(LCZ(IEND).AND.IEND.LT.M)THEN
            DO I = IEND+1,M
               IF(.NOT.LCZ(I))THEN
                  I1 = I - 1
                  GOTO 97
               ENDIF
            END DO
            I1 = M
   97       CONTINUE
         ENDIF
         DCOMP2 = 0.0D0
C COMPUTE SUM OF SPECIES MASS
         SUMSPEC = 0.0D0
         DO I = I0,I1
            SUMSPEC = SUMSPEC + HS2(I)*HCOMP(ID(N),I)
         END DO
C UPDATE COMPOSITION ARRAY.
         SUMSPEC2 = 0.0D0
         DO I = 1,NTAB
            J = IBEG+I-1
            HCOMP(ID(N),J) = HCOMP(ID(N),J)+YVAL(I)
            DCOMP2 = DCOMP2 + YVAL(I)*HS2(J)
            SUMSPEC2 = SUMSPEC2 + HS2(J)*HCOMP(ID(N),J)
         END DO
C UPDATE INNER CZ COMPOSITION IF APPLICABLE.
         IF(I0.LT.IBEG)THEN
            DO I = IBEG-1,I0,-1
               HCOMP(ID(N),I)=HCOMP(ID(N),IBEG)
               SUMSPEC2 = SUMSPEC2 + HS2(I)*HCOMP(ID(N),I)
               DCOMP2 = DCOMP2 + YVAL(1)*HS2(I)
            END DO
         ENDIF
C UPDATE OUTER CZ COMPOSITION IF APPLICABLE.
         IF(IEND.LT.I1)THEN
            DO I = IEND+1,I1
               HCOMP(ID(N),I)=HCOMP(ID(N),IEND)
               SUMSPEC2 = SUMSPEC2 + HS2(I)*HCOMP(ID(N),I)
               DCOMP2 = DCOMP2 + YVAL(NTAB)*HS2(I)
            END DO
         ENDIF
C CHECK FOR CONSERVATION OF SPECIES
c         TEST = ABS(SUMSPEC-SUMSPEC2)
c         WRITE(*,911)ID(N),DCOMP,DCOMP2,SUMSPEC
c 911     FORMAT(I5,1P3E10.2)
c         IF(TEST.GT.1.0D-10*SUMSPEC)THEN
c            RATIO = SUMSPEC/SUMSPEC2
c            DO I = I0,I1
c               HCOMP(ID(N),I)=RATIO*HCOMP(ID(N),I)
c            END DO
c         ENDIF
      END DO
C  ADJUST HE4 FOR CHANGES IN X, Z, AND HE3.
      IF(.NOT.LOK)THEN
         DO I = I0,I1
            HCOMP(2,I) = 1.0D0 - HCOMP(1,I) - HCOMP(3,I) - HCOMP(4,I)
         END DO
      ENDIF
  200 CONTINUE
      RETURN
      END
