C
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
C MASS LOSS ROUTINE
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
      SUBROUTINE MDOT(DELTS,HCOMP,HD,HJM,HP,HR,HS,HS1,HS2,HSTOT,
     *                HT,JENV,LNEW,M,OMEGA,RMU,RTOT,SMASS,DMDT,
     *                EACC,ETHAV,SUMDM,SENVOLD)
      PARAMETER (JSON=5000)
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
      COMMON/COMP/XENV,ZENV,ZENVM,AMUENV,FXENV(12),XNEW,ZNEW,STOTAL,
     *     SENV
      COMMON/CONST/CLSUN,CLSUNL,CLNSUN,CMSUN,CMSUNL,CRSUN,CRSUNL,CMBOL
      COMMON/CONST1/ CLN,CLNI,C4PI,C4PIL,C4PI3L,CC13,CC23,CPI
      COMMON/CONST2/CGAS,CA3,CA3L,CSIG,CSIGL,CGL,CMKH,CMKHN
      COMMON/CONST3/CDELRL,CMIXL,CMIXL2,CMIXL3,CLNDP,CSECYR
      COMMON/DEUTER/DRATE(JSON),DRATE0(JSON),FMASSACC,JCZ
      COMMON/DISK/SAGE,TDISK,PDISK,LDISK
      COMMON/FLAG/LEXCOM
      COMMON/MASSCHG/DMDT0,FCZDMDT,FTOTDMDT,COMPACC(15),CREIM,
     *               LREIMER,LMDOT
      COMMON/ROT/WNEW,WALPCZ,ACFPFT,ITFP1,ITFP2,LROT,LINSTB,LWNEW
      COMMON/MASSCHG2/SACC,SCEN,SMASS0,DLOGP,DLOGT
C mhp 8/10 added option to scale mass loss rate by rotation; requires rotating model
      COMMON/MASSCHG3/DMSUN,DMWSUN,DMWMAX,LSOLWIND
      DIMENSION HCOMP(15,JSON),HS(JSON),HS1(JSON),HS2(JSON),
     *          HT(JSON),HJM(JSON),OMEGA(JSON),HR(JSON),
     *          HP(JSON),HD(JSON)
      SAVE
      SENVOLD = HS(M) - HSTOT
C MHP 8/10- CHECK FOR SCALED SOLAR WIND MASS LOSS
      IF(LSOLWIND .AND. LROT) THEN
         F1 = (OMEGA(M)/DMWSUN)**2
         F2 = (DMWMAX/DMWSUN)**2
         DMDT = DMSUN*MIN(F1,F2)
         WRITE(*,*)OMEGA(M),DMDT
      ENDIF
C      LMDOT = .TRUE.
C      DMDT = 4.0D-10
C MAXIMUM FRACTION OF CZ MASS REMOVED PER TIMESTEP
C      FRAC = 0.1D0
C      IF(.NOT.LMDOT)GOTO 9999
C CONVERT FROM SOLAR MASSES/YEAR TO GM/SEC
      RATE = ABS(DMDT)*CMSUN/CSECYR
C THE SUM OF THE MASSES OF ALL SHELLS (E.G. TO JENV - 1)
C SHOULD BE USED RATHER THAN THE SUM OF THE MASSES DOWN
C TO THE MIDPOINT OF THE BOTTOM SHELL
C      DMCZT = 10.0D0**HSTOT - HS1(JENV)
      DMCZT = SUMDM
C COMPUTE MASS OF SURFACE CONVECTION ZONE BELOW FITTING POINT
      IF(JENV.EQ.M) STOP911
      IF(JENV.GT.1) THEN
         DMCZ = HS1(M) - HS1(JENV)
      ELSE
         DMCZ = HS1(M)
      ENDIF
C COMPUTE MAXIMUM TIMESTEP BASED ON NOT REMOVING TOO MUCH MASS FROM THE
C SURFACE CZ (FCZDMDT) OR AS A FRACTION OF THE TOTAL MASS (FTOTDMDT)
      DTTOT = FTOTDMDT*SMASS*CMSUN/RATE
      DTCZ = FCZDMDT*DMCZ/RATE
      DTMAX = MIN(DTTOT,DTCZ)
C RESTRICT TIMESTEP TO ADD NO MORE THAN 1/2 OF THE CURRENT MASS
C BEYOND THE FITTING POINT TO THE STAR.
      IF(RATE.GT.0.0D0)THEN
         DTENV = 0.5D0*(10.0D0**HSTOT-10.0D0**HS(M))/RATE
         DTMAX = MIN(DTMAX,DTENV)
      ENDIF
      IF(DTMAX.LT.DELTS)THEN
         WRITE(*,10)DELTS,DTMAX
 10      FORMAT(' TIMESTEP REDUCED FOR MASS LOSS - OLD,NEW',1P2E12.3)
         DELTS = DTMAX
      ENDIF
C mhp 8/10 turn mass loss off when disk exhausted only when dm /dt > 0, e.g. accretion
      IF(LDISK .AND. DMDT.GT.0.0D0)THEN
         TEST = SAGE + 1.0d-9*DELTS/CSECYR
         IF(TEST.GT.TDISK)THEN
            DELTS = (TDISK-SAGE)*1.0D9*CSECYR
            LDONE = .TRUE.
         ELSE
            LDONE = .FALSE.
         ENDIF
      ELSE
         LDONE = .FALSE.
      ENDIF
C FINAL AMOUNT OF MASS LOSS INFERRED IN CGS UNITS.
      DELM = DMDT*CMSUN*DELTS/CSECYR
C COMPUTE THE MEAN THERMAL ENERGY
C CONTENT OF THE CONVECTION ZONE FOR MODELS WITH ACCRETION.
      IF(DELM.GT.0.0D0)THEN
         ETHNEW = (EACC*DELM + ETHAV*SUMDM)/(DELM+SUMDM)
         FAC = LOG10(ETHNEW/ETHAV)
C         WRITE(*,912) JENV,EACC,ETHAV,ETHNEW,FAC,SUMDM,DELM
C 912     FORMAT(I5,1P6E12.3)
C OVERALL SCALE FACTOR IN R
         T = 10.0D0**HT(JENV)
         P = 10.0D0**HP(JENV)
         D = 10.0D0**HD(JENV)
         BETA = 1.0D0- (CA3*T**4/P)
         RMU = P*BETA/(D*T)
C         DLOGEN = (DELM/DMCZ)*(SACC-SCEN)/RMU
         DLOGEN = (DELM/DMCZ)*SCEN/RMU
C         DLNM = LOG(DMCZ+DELM)-LOG(DMCZ)
         DLNM = 0.0D0
         DLOGR = (CC23*DLOGEN - CC13*DLNM)/CLN
         DLOGT = DLNM/CLN - DLOGR
         DLOGP = 2.0D0*DLNM/CLN -4.0D0*DLOGR
C         WRITE(*,*)DLOGR,DLOGP,DLOGT
         IF(JENV.EQ.1)THEN
            DO J = JENV,M
               HR(J) = HR(J)+DLOGR
               HP(J) = HP(J)+DLOGP
               HT(J) = HT(J)+DLOGT
            END DO
         ELSE
            HP(JENV) = HP(JENV)+DLOGP
            HT(JENV) = HT(JENV)+DLOGT
            RB = 10.0D0**HR(JENV)
            FACR = 10.0D0**DLOGR
            DO J = JENV+1,M
               RINIT = 10.0D0**HR(J)
               RNEW = RB+FACR*(RINIT-RB)
               HR(J) = LOG10(RNEW)
            END DO
         ENDIF
C         DO J = JENV,M
C            HT(J) = HT(J) + FAC
C         END DO
C         WRITE(*,*)HT(15),HT(16),HT(17)
      ENDIF
C FOR MODELS WITH ROTATION AND MASS LOSS REMOVE ANGULAR MOMENTUM.
C IN THIS CASE WE ASSUME A THERMAL WIND WHERE THE SURFACE MATTER
C CARRIES AWAY ONLY ITS LOCAL ANGULAR MOMENTUM PER UNIT MASS.
      IF(LROT .AND. DELM.LT.0.0D0)THEN
C MOMENT OF INERTIA PER UNIT MASS AT THE SURFACE.
         SURFI = 2.0D0/3.0D0 * RTOT**2
         IF(WALPCZ.GE.0.0D0)THEN
C SOLID BODY CZ ROTATION
            DELJ = OMEGA(M)*SURFI*DELM
         ELSE IF(WALPCZ.LE.-2.0D0)THEN
C CONSTANT J/M
            DELJ = HJM(M)*DELM
         ELSE
            WSURF = OMEGA(M)*10.0D0**(HR(M)*WALPCZ)/RTOT**WALPCZ
            DELJ = WSURF*SURFI*DELM
         ENDIF
C  FIND TOTAL STARTING ANGULAR MOMENTUM OF C.Z.
         CJTOT = HJM(JENV)*HS2(JENV)
         DO J = JENV+1,M
            CJTOT = CJTOT + HJM(J)*HS2(J)
         END DO
         CJNEW = (CJTOT+DELJ)
         RATIO = CJNEW/CJTOT
         WRITE(*,22)DELM,DELJ,OMEGA(M),CJNEW,CJTOT,DMCZT
 22      FORMAT(1P6E13.4)
         DO J = JENV,M
            HJM(J) = HJM(J)*RATIO
         END DO
      ENDIF
C REMOVE OR ADD MASS IN THE CONVECTION ZONE.
C HS1 IS THE LOCATION OF THE ZONE CENTERS IN GM;
C HS IS THE BASE-10 LOG OF HS1
      IF(DELM.LT.0.0D0)THEN
         FX = (DMCZ + DELM)/DMCZ
C      WRITE(*,*)JENV,M,DMCZ,DELM,FX,HS1(M),HS(M)
         DO I = JENV+1,M
            HS1(I) = HS1(JENV)+FX*(HS1(I)-HS1(JENV))
            HS(I) = LOG10(HS1(I))
         END DO
      ENDIF
C      WRITE(*,*)HS1(M),HS(M)
C CORRECT TOTAL MASS IN SOLAR UNITS (SMASS) AND
C LOG OF TOTAL MASS IN GRAMS (HSTOT,STOTAL)
      SMASS = SMASS + DELM/CMSUN
      SMASS0 = SMASS
      DMSUN0 = DELM/CMSUN
      WRITE(*,20)SMASS,DMSUN0
 20   FORMAT('MASS LOSS APPLIED - NEW M,DEL M',1P2E19.10)
      HSTOT1 = 10.0D0**HSTOT
      HSTOT2 = HSTOT1 + DELM
      HSTOT = LOG10(HSTOT2)
      STOTAL = HSTOT
C CORRECT MASS CONTENTS OF INDIVIDUAL SHELLS (HS2, IN GM)
      DO I = JENV,M-1
       HS2(I) = 0.5D0*(HS1(I+1)-HS1(I-1))
      END DO
      HS2(M) = HSTOT2 - 0.5D0*(HS1(M)+HS1(M-1))
C 07/02RESET SENV
      SENV = HS(M) - HSTOT
C RECOMPUTE SURFACE BOUNDRY CONDITION
      LNEW = .TRUE.
C REMIX THE SURFACE CONVECTION ZONE IF MDOT IS POSITIVE.
C      WRITE(*,911)DELM,DMCZT,COMPACC(12),HCOMP(12,M),
C     *            COMPACC(4),HCOMP(4,M)
C 911  FORMAT(1P6E12.3)
      IF(DELM.GT.0.0D0)THEN
         DO I = 1,11
            ABUND=(HCOMP(I,JENV)*DMCZT+COMPACC(I)*DELM)/(DELM+DMCZT)
            DO J = JENV,M
               HCOMP(I,J) = ABUND
            END DO
         END DO
         FMASSACC = DELM
      ENDIF
C  9999 CONTINUE
      IF(LDONE)LMDOT = .FALSE.
C      WRITE(*,*)M,HS(M),HSTOT
      RETURN
      END

