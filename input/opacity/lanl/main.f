ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c Main Program           OPACITIES
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c
c INTRODUCTION
c
c This program combines the H.BIN and HE.BIN extinction coefficient
c files with the Z.kap file, created with the CREATEZ.FOR program, and
c produces a set of opacity tables.  The opacity tables are grids of
c Rosseland mean opacities calcuated at user specified density and
c temperature grid points.  The specific mixuture(s) of X, Y, and Z
c are specified by the user and individuial tables are constructed for
c each mixture.
c
c The user is required to supply his/her own output routines.  Included
c here is a generic routine which prints out everything and a
c relatively sophiticated routine which creates a Vandenburg format
c opacity table.
c
c DESCRIPTION
c
c This program carries out two tasks:  (1) it combines H and He
c extinction coefficients with the Z mixture extinction coefficients, and
c then (2) it integrates the resultant extinction coefficients over
c frequency space to get the Rosseland mean opacities.
c An additional task has been added to the program: that of creating
c a complete set of tables in the Vandenburg format.  This is a non-
c trivial set of routines which should be ignored unless you require
c this format.
c
c INPUT:
c
c Program operation is controlled by the variables in the namelist
c START.OPACITIES.  The program will look for this file in your
c program directory.  The namelist file contains the names (or paths
c to the other files used by OPACITIES.FOR.  The program needs the
c three files containing the extincition coefficients for H, HE, and
c the Z mixture.  The default names are H.BIN, HE.BIN, and Z.kap,
c respectivley.
c
c When generating Vandenburg format opacites (lvand = true) then
c must have files of the Cox and Stewart opacity tables in Vandenburg
c format.
c
c OUTPUT:
c
c The program's output is controlled by the user.  This version can output
c three different sets of opacity tables.  The first set, used primarily,
c for debugging contains, uninterpolated lists of the density, temperature
c eta, opacity, energy, pressure, and epsilon.  As for all outputted
c tables a unique file is used for each composition (X, Y, Z).  The
c first set of tables are generated by the wrtgrid routine.  The output
c files are identified as whatever.GRID1, whatever.GRID2, etc. with one
c file for each mixture (X, Y, Z).  These tables are in Eta, Temp space.
c
c The second set contain lists, covering the entire density, temp range
c of the LASL extinction coefficients, of the opacities, pressure, energy,
c and epsilon.  These tables are in density, temp plane. The output files
c are identified as whatever.TABLE1, whatever.TABLE2, etc. with one file
c for each each mixture (X, Y, Z). The wrttable subroutine produces this
c output.

c The final set is a complete Vandenburg format opacity table.  Part
c of the table is filled with Cox and Stewart opacites.  See the
c wrtvand subroutine for details.  If the lvand flag is 'T' then
c this output will be generated, and, in addition, will override
c other options.
c Errors during execution are written to "DEBUG.OPACITIES"
c
c INPUT PARAMETER (NAMELIST)
c lextra - if true output will contain energy, pressure and epsilon
c          as will as opacity, if false will only output opacity.
c gpstfx - characters that will be prepended to GRID file names.
c tpstfx - characters that will be prepended to TABLE file names.
c zfile - full file name of z mixture of extinction coefficients created
c         using CREATEZ.FOR
c hfile - full file name of H extinction coefficients (usually H.BIN).
c hefile - full file name of HE extincition coefficients (usually HE.BIN).
c lvand - if true will create Vandeburg format opapcity tables, if false
c         will not.
c
c if lvand is true then the following variables are used:
c      zforvan - The specific value of Z for Vandenburg opacity table.
c      zforcox - The specific value of Z for the appended Cox tables.
c                Normally this number should be the same as zforvan.
c      ldoint - if true then fill gaps in opacity table by using cubic
c               spline interpolation, if false then fill gaps by using
c               nearest neighbor's value.
c      numcox - number of Cox and Stewart Vandenburg format opacity
c               tables available.
c      coxz(1),...,coxz(numcox) - the Z for the Cox and Stewart opacity
c               tables.
c      coxfnm(1),...,coxfnm(numcox) - the names of the Cox and Stewart
c                opacity table files.
c      vandfnm - name of the output file to contain the Vandenburg format
c                opacity table.
c
c numofxyz - number of mixtures (X, Y, Z) requested. (ignored if lvand='T')
c xa(1),...,xa(numofxyz) - H mass fraction for the mixtures. (ignored
c                          if lvand='T')
c za(1),...,za(numofxyz) - Z mass fraction for the mixtures. (ignored
c                          if lvand='T')
c numrho - number of densities
c rho(1),...,rho(numrho) - opacities will be calculated at these densities
c
c numt - number of temperatures
c t(1),...,t(numt) - opacities will be caluculated at these temperatures.
c IMPORTANT: No interpolation is done in T hence numt and t(i) are ignored.
c
c az(20) and bz(20) the relative abundances of the z mixture normalized
c      so that az(3)+az(4)+...+az(2) = 1.0.  Similarly for bz.  az are
c      relative number fraction and bz are the relative mass fraction. 
c
c  NOMENCLATURE:  grids are arrays in eta, T of unintepolated opacities.
c                 tables are arrays in density, T of interpolated opacites.
c
C  MODIFICATION HISTORY:
c     January 25, 1991
c         added output of Z mixture ratios to Vandenburg format and
c         generic output.
c
c
      implicit real*4(a-h,o-z)
      implicit integer*4 (i-n)
      logical lextra, lvand, ldbug, ldoint
c MXTB = maximum number of tables that this program can calculate at one
c time and MXTRHO = maximum number of T and rho in opacity tables.
      parameter(MXTB=10,MXTRHO=100)
      character*64 hfile, hefile, zfile
      character*32 gpstfx, tpstfx
      character*2 element(20), elemlasl(20)
      character*64 coxfnm(10), vandfnm
      dimension coxz(10), az(20), bz(20), awt1(20)
      common /weights/ xa(MXTB), ya(MXTB), za(MXTB), t(MXTRHO),
     1  rho(MXTRHO), xn(MXTB), yn(MXTB), zn(MXTB),
     2  z(3), awt(3), datmix(100),
     3  sumam(MXTB), sumaz(MXTB)
c output tables calculated by interpolating the grids
      common /table/ rhot(MXTB, MXTRHO, MXTRHO),
     1    rkapt(MXTB, MXTRHO, MXTRHO), et(MXTB, MXTRHO, MXTRHO),
     2    pt(MXTB, MXTRHO, MXTRHO), epst(MXTB, MXTRHO, MXTRHO)
c input grids
      common /grid/ rhog(MXTB, 50, 50), tg(MXTB, 50),
     1    rkapg(MXTB, 50, 50), eg(MXTB, 50, 50),
     2    pg(MXTB, 50, 50), epsg(MXTB, 50, 50),
     3    etag(MXTB, 50, 50)
      common /elem/element, elemlasl
c indicies for the grids
      common/index/ itx, iex(50)
      common /io/ioz, ioh, iohe, iodbug, iot, iog, iocoxl, iocoxh,iodv
      data z/ 1., 2., 0./
      data awt/ 1.008, 4.0026, 0./
      data awt1/ 1.008, 4.0026, 12.0111, 14.0067, 15.9994, 20.179,
     1 22.9898, 24.305, 26.9815, 28.086, 30.9738, 32.06, 35.453, 39.948,
     2 40.08, 47.9, 51.996, 54.938, 55.847, 58.71    /
      data element/' H','HE',' C',' N',' O','NE','NA',
     1             'MG','AL','SI',' P',' S','CL','AR',
     2             'CA','TI','CR','MN','FE','NI'/
      data elemlasl/'H ','HE','C ','N ','O ','NE','NA',
     1             'MG','AL','SI','P ','S ','CL','AR',
     2             'CA','TI','CR','MN','FE','NI'/
c define namelist
      namelist /start/numofxyz, xa, za, numt, t, numrho, rho,
     1 gpstfx, tpstfx, zfile, hfile, hefile, coxfnm, coxz, lextra,
     2 vandfnm, zforvan, zforcox, numcox, ldoint, lvand
c logical units for io
      iost = 1
      ioh = 11
      iohe = 12
      ioz = 13
      iog = 2
      iot = 3
      iodbug = 4
      iocoxl = 14
      iocoxh = 15
      iodv = 16
C     open(iodbug, FILE='DEBUG.OPACITIES',
C    1     STATUS='UNKNOWN', FORM='FORMATTED')
C     rewind iodbug
      open(iost,FILE=
     *'/home/tinsley/pinsono/yrec3b/LANL/start.opacities',
     1     STATUS='OLD', FORM='FORMATTED')
      lextra = .FALSE.
      read(iost, NML=start)
      close(iost)
c DEBUG  make sure namelist is working.
c     write(iodbug, 71) numofxyz,lextra, zfile, gpstfx,
c    1  tpstfx, xa, za, numt, t, numrho, rho
c  71 format(' numofxy=', i3, ' lextra=',l1,
c    1 ' zfile=', a64, /,' gpstfx=',a32,/,
c    1 ' tpstfx=', a32, /,' xa=', 5(/,1p2e20.5),/,' ya=',
c    2 5(/,1p2e20.5), /, ' numt =', i5, '  t=',
c    3 25(/,1p4e19.5), /, ' numrho =', i5, '  rho=',
c    4 25(/,1p4e19.5))
c If creating a Vandenberg format table then reset the following:
       if (lvand) then
	  numofxyz=5
	  xa(1) = 1.0e-8
	  za(1) = zforvan
	  xa(2) = 0.20
	  za(2) = zforvan
	  xa(3) = 0.50
	  za(3) = zforvan
	  xa(4) = 0.80
	  za(4) = zforvan
	  xa(5) = 1.0-zforvan-0.001
	  za(5) = zforvan
	  numrho = 25
	  do i=1, numrho
	     rho(i) = 10.0**(-14+i)
	  end do
      endif
c read first record of z tape to determine average awt and z
      open (ioz, FILE=zfile,
     1      FORM='UNFORMATTED',STATUS='OLD')
      call tprdid(ioz, 20, ierr, .TRUE.)
      read (ioz, end=3002 ) datmix
      rewind ioz
c  relative abundances of z mixture
      do i=1, 20
	 az(i) = datmix(49+i)
      end do
      sumamo = datmix(2)
      do i=3, 20
	bz(i) = az(i) * awt1(i) / sumamo
      end do
      z(3) = datmix(2)
      awt(3) = datmix(3)
      bz(1) = 0.0
      bz(2) = 0.0
      az(1) = 0.0
      az(2) = 0.0
c  convert mass fractions to number fractions
      do i=1, numofxyz
	 ya(i) = 1.0 - (xa(i) + za(i))
	 sumam(i)= 1.0/(xa(i)/awt(1) + ya(i)/awt(2) + za(i)/awt(3))
	 xn(i) = xa(i)*sumam(i)/awt(1)
	 yn(i) = ya(i)*sumam(i)/awt(2)
	 zn(i) = za(i)*sumam(i)/awt(3)
	 sumaz(i) = xn(i)*awt(1)+yn(i)*awt(2)+zn(i)*awt(3)
      end do
c open h, he, and z mixture files and read header id.
      open(ioh, FILE=hfile, STATUS='OLD', FORM='UNFORMATTED')
      open(iohe, FILE=hefile, STATUS='OLD', FORM='UNFORMATTED')
      call tprdid(ioh, 1, ierr, .FALSE.)
      call tprdid(iohe, 2, ierr, .FALSE.)
      call tprdid(ioz, 20, ierr, .TRUE.)
      call combine(numofxyz, lextra)
      close (ioh)
      close (iohe)
      close(ioz)
c
c     wrtgrid outputs raw grids; primarrily useful for debugging
c     call wrtgrid(iog, numofxyz, lextra, gpstfx)
c
c     interpolate tables to requested array of density and defaulT
c     temps.
      call interp(numofxyz, numt, numrho, lextra)
c     write out interpolated tables.
      call wrttab(iot, numofxyz, numrho, lextra, tpstfx)
 3002 continue
      if (lvand) then
	 call wrtvand(zforcox, zforvan, coxz, bz, coxfnm, 
     *                numcox, numrho, vandfnm, ldoint)
      end if
      stop
      end
